{"nodes":[{"title":"7 simple habits of the top 1% of engineers","slug":"__7++++simple++++habits++++of++++the++++top++++1%++++of++++engineers","shortSummary":"[[Engineers]]\nhttps://engineercodex.substack.com/p/7-simple-habits-of-the-top-1-of-engineers코더가 아닌 엔지니어가 될 것 (Be an engineer, not a coder)엔지니어링은 문제를 해결하는 것최고의 엔지니어는 코드를 목적 달성을 위한 수단으로 생각함코드를 작성하는 즐거움은 있지만 목적이 없는 코드를 작성하는 것은 의미가 없음. 대신 코드는 사용자를 위한 솔루션을 설계하는 데 사용됨코딩은 창의성을"},{"title":"영단어 플러그인","slug":"__Idea__영단어++++플러그인","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 16:09주제 또는 키워드영단어 저장 웹 플러그인간단한 내용chrome에서 자동 변역된 단어들 저장하는 플러그인 개발코드 스니펫 (선택)"},{"title":"Refactoring Basic","slug":"__Refactoring++++Basic","shortSummary":""},{"title":"To Do","slug":"__To++++Do","shortSummary":"마케팅 시작시 서버 증량fastcampus 강의 듣기(마이크로 프론트엔드(MFA:Micro Frontend Architecture) : 대규모 서비스 설계부터 운영까지 (feat.모노레포&모듈페더레이션) | 패스트캠퍼스)\n계정 : tooning.io@gmail.comPW : ghdud2509!!!"},{"title":"index","slug":"__index","shortSummary":"What is MindStone?MindStone is a free open-source alternative solution to Obsidian PublishHere how it look like once published:This website include a published version of default Obsidian Help vault, [[Start here]]MindStone features:✅ Drop-in support for (default) Obsidian Vault✅ [[Wiki Link]] built-in support✅ Folder-base navigation"},{"title":"필살기 경험 고르기","slug":"__job__resume__Step1__필살기++++경험++++고르기","shortSummary":"<h3>경험 리스트업 작성 가이드</h3>\n<ul>\n\t<li>모든 경험 나열해보기</li>\n</ul>| 학업/프로젝트     |             |\n|-----------------|-------------|\n| 동아리/대외활동 |             |\n|"},{"title":"3C4P로 경험 분해하기","slug":"__job__resume__Step2__3C4P로++++경험++++분해하기","shortSummary":"![[3C4P 작성가이드 이미지.png]]<h3>작성 원칙</h3>\n\t<h5>경험에 초점을 맞춰라</h5>\n<li>나열하지 말고, 정확하게 강조하고 싶은 내용에 초점을 맞춰라</li>\n<h5>수식어를 수치화, 결과물로 대체</h5>\n<li>형용사들을 나열하지말고 정확한 수치를 통해 표현</li>\n<h5>논리 구조를 탄탄하게 하라</h5>\n<li>내 입장에서 너무나 당연한 나머지 경험을 생략하는 경우가 있다, 주의 할것</li>\n<li>문제의 지점을 발견하기까지의 단계를 Place에 작성하고 문제를"},{"title":"Why","slug":"__job__resume__Step2__3C작성++++가이드__Why","shortSummary":"<ol>\n<h3>Customer</h3>\n<li> 해택을 받는 대상</li>\n<p>\n이 경험을 통해 만족시키고 싶은 대상\n<br>\n1차 고객: 실제 고객, 2차 고객: 협력부서, 다른 팀, 회사 전체, 3차 고객: 상사, 교수님, 동료등\n</p>\n<li>대상이 필요로 한것</li>\n<p>앞에서 설정한 고객이 필요로 한것, 여려워하는 점이 무엇인지 적는다.\n<br>\n예시: 마케팅 문제로 출시일을 앞당기고 싶어함, 상세"},{"title":"What, How","slug":"__job__resume__Step2__4P++++작성++++가이드__What,++++How","shortSummary":"<ol>\n<h3>Product 결과물: 자소서의 소제목, 1분 자기소개의 한줄 정리</h3>\n<h5>직접적 의미</h5>\n<ol>\n<li>제품, 서비스</li>\n<li> 핵심 상품</li>\n<li> 매출과 수익으로 평가</li>\n<li> 개발-디자인-생산 과정</li>\n</ol>\n<h5>적용적 의미</h5>\n<ol>\n<li>업무 성과, 결과물</li>\n<li> 핵심 과제</li>\n<li> 생산성으로 평가</li>\n<li> 가치사슬 연결과정</li>\n</ol>\n<li>결과 작성</li>\n<p>내가 달성한 수치화된 결과물 적기\n<br>\n예시:상세 설계 기간을 최소 3개월에서 5주로 단축\n</p>\n<li>결과의 의미</li>\n<p>내가 달성한 성과의"},{"title":"경험 수치화","slug":"__job__resume__Step2__경험++++수치화","shortSummary":"![[경험 수치화 이미지.png]]"},{"title":"자소서 작성하기","slug":"__job__resume__Step3__자소서++++작성하기","shortSummary":"![[자소서 문단 구조 이미지.png]]<h3>소제목 작성방법</h3>\n3p중 하나를 How로 Product를 Result로 배치\n<p>\nProduct: 전년도 대비 매출 217% 증가\n<br>\nPlace: 단체 등록 자동화 프로세스 개발\n<br>\nPrice: 경쟁사 대비 간단한 프로세스\n<br>\nPromotion: 난발식 콜형식 영업에서 4단계 간편 프로세스로 단순화\n<br>\n소제목: 콜형식 영업에서 자동화 프로세스 개발로 매출 217% 증가\n</p>\n<h3>3C 작성방법</h3>\n4p와"},{"title":"자소서 퀄리티 높이기","slug":"__job__resume__Step4__자소서++++퀄리티++++높이기","shortSummary":"체크리스트[ ] 질문에 대한 답을 하고 있는가[ ] 결론이 근거를 가지고 있는가[ ] 소제목 또는 첫 문장이 '요약과 압축'이 되어있는가?[ ] 말하고자 하는 결론이 '서두에 배치'되어 있는가?[ ] 근거가 직무,산업,직장 중 한가지와 '연결'되었는가?[ ] 한 개의 문단 또는 답변에서 '한"},{"title":"역량 구조도","slug":"__job__resume__역량++++구조도","shortSummary":"![[역량 구조도 이미지.png]]<h3>목표달성능력</h3>\n<ul>\n<li>기본적인 역량, 스스로 목표를 달성했던 경험을 찾아보자</li>\n</ul><h3>문제해결능력</h3>\n<ul>\n\t<li>목표에 도전했던 경험이 있어야한다.</li>\n\t<li>목표 달성의 길에서 문제라는 장애물을 어떻게 극복했는지가 문제해결 능력</li> \n</ul><h3>실행력</h3>\n<ul>\n\t<li>꾸준히 실행해서 달성한 경험을 적어보자</li>\n\t<li>혼자 실행했다면 추진력, 여러 사람과 함께 했다면 리더십으로 이어짐</li>\n</ul><h3>의사소통능력, 분석력</h3>\n<ul>\n\t<li>어떤 일을 분석해 본 경험, 의사소통을 사용해"},{"title":"자소서 필살기 문항","slug":"__job__resume__자소서++++필살기++++문항","shortSummary":"<h3>프로세스</h3>\n1. 경험 리스트업\n2. 3C4P\n3. 비지니스 레터 체크리스트<h3>필살기란</h3>\n- 유사경험 + 성공경험 + 인사이트의 조합<h3>유사경험</h3>\n- 지원 직무 관련 경험, 비슷한 경험도 ok\n- 정리법\n\t1. 고객이나 현직자 관찰할 수 있는 장소가보기\n\t2. 의사소통 관찰하기\n\t3. 고객을 관찰\n- 경험을 할경우 반드시 기록<h3>성공경험</h3>\n- 유사 경험 내에서 성공한 경험이"},{"title":"지원 동기","slug":"__job__resume__지원++++동기","shortSummary":"<h3>현직자 인터뷰를 통해 정보 수집</h3>\n<ol>\n\t<li>사업 자체의 경쟁력</li>\n\t<li>문화의 경쟁력</li>\n</ol>사업 자체의 경쟁력비지니스 모델, 육안 검사자가 열악한 공장 현장에서 10시간 이상 제품을 검수하면 한계에 직면, 불량품 유출로 금전적 손실을 감당머신 미전은 반복되는 작업에도 정확도가 유지 되고 눈으로 볼수없는 세세한 불량까지도 검출각 제조 현장"},{"title":"취업 전략","slug":"__job__취업++++전략","shortSummary":"시기2023년 4분기2024년 상반기직무 선택은 1~2개로 한정 (메인 1개, 서브 1개)웹 풀스택 개발자 (메인)웹 백엔드 개발자 (서브)산업 선택은 2~3개로 한정 (메인 2개, 서브 1개)기계 공학 분야...고민해보자대기업부터 스타트업까지 균형있게 지원목표2023년 11월이 지나기 전에 이력서 한곳이상 제출하기취업 포트폴리오 양식|    "},{"title":"나만의 블로그 개요","slug":"__project__나만의++++블로그__나만의++++블로그++++개요","shortSummary":"[[나만의 블로그]]1. 개요대상 독자웹 개발 기술자: 최신 웹 개발 트렌드와 기술에 관심이 있는 전문가들.웹 개발에 관심 있는 일반인: 웹 개발에 대한 기초적인 지식이나 관심을 가진 비전문가들.개인적인 네트워크: 블로그 운영자의 친구, 가족 및 개인적인 관계망에 속한 사람들.콘텐츠 유형웹 개발 기술 관련"},{"title":"나만의 블로그 기능 요구사항","slug":"__project__나만의++++블로그__나만의++++블로그++++기능++++요구사항","shortSummary":"1. 컨텐츠 관리 시스템 (CMS)사용자 친화적인 인터페이스를 통한 콘텐츠 생성, 편집 및 관리텍스트, 이미지, 비디오 등 다양한 콘텐츠 유형 지원2. 카테고리 및 태그 시스템웹 개발, 개인 일기, 여행 등 주제별 콘텐츠 조직화 및 검색 용이성 제공3. 반응형 웹 디자인스마트폰, 태블릿,"},{"title":"나만의 블로그 기획 문서","slug":"__project__나만의++++블로그__나만의++++블로그++++기획++++문서","shortSummary":"<h3>개요</h3>\n[[나만의 블로그 개요]]기능 요구 사항[[나만의 블로그 기능 요구사항]]사용자 인터페이스 및 디자인기술 스택프론트엔드 (Front-End)HTML, CSS, JavaScript: 웹 페이지의 기본 구조, 스타일링, 그리고 인터랙티브 기능을 위한 핵심 기술.React.js 또는 Vue.js: 사용자 인터페이스를 구축하기 위한 모던 자바스크립트 프레임워크.Bootstrap 또는 Tailwind CSS: 반응형 디자인과"},{"title":"노션 클론코딩","slug":"__project__노션++++클론코딩","shortSummary":"https://news.hada.io/topic?id=3194"},{"title":"service worker with angular","slug":"__service++++worker++++with++++angular","shortSummary":""},{"title":"API","slug":"__tech__API","shortSummary":"날짜와 시간날짜: 2024-03-31시간: 21:56주제 또는 키워드[[API]]간단한 내용Application Programing Interface다른 소프트웨어 시스템과 통신하기 위해 따라야 하는 규칙, 정의, 프토로콜을 의미웹 API는 클라이언트와 웹 리소스 사이의 [[gateway]]라고 생각할  수 있다코드 스니펫 (선택)"},{"title":"In place","slug":"__tech__Algorithm__In++++place","shortSummary":"날짜와 시간날짜: 2024-04-29시간: 11:24주제 또는 키워드[[Algorithm]]간단한 내용입력 데이터를 변형시킬때 추가적인 저장 공간을 거의 사용하지 않는 알고리즘공간 복잡도를 최소화하기 위해 사용코드 스니펫 (선택)function reverseInPlaceWithFor(arr: number[]): number[] {\n    let n = arr.length;\n    for (let i ="},{"title":"깊이 우선 탐색","slug":"__tech__Algorithm__깊이++++우선++++탐색","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 21:57주제 또는 키워드[[Algorithm]]\n[[탐색]]\n[[DFS]]간단한 내용트리나 그래프 구조에서 한 경로를 깊이 우선으로 탐색하다가 더 이상 진행할 수 없게 되면 이전 분기점으로 돌아가 탐색스택 또는 재구 호출에 사용복잡도: O(노드수 + 간선수)코드 스니펫 (선택)interface Node {\n  value: number;\n  children:"},{"title":"너비 우선 탐색","slug":"__tech__Algorithm__너비++++우선++++탐색","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 22:17주제 또는 키워드[[Algorithm]]\n[[탐색]]\n[[BFS]]간단한 내용트리나 그래프 구조에서 시작점으로부터 가까운 노드를 먼저 탐색하고, 그 다음에는 더 멀리 있는 노드를 차례로 탐색큐에 사용복잡도: O(노드수 + 간선수)코드 스니펫 (선택)function breadthFirstSearch(root: Node | null, target: number): boolean {\n  if (root ==="},{"title":"등차수열","slug":"__tech__Algorithm__등차수열","shortSummary":"날짜와 시간날짜: 2024-04-22시간: 23:38주제 또는 키워드[[Algorithm]]\n[[점화식]]간단한 내용각 항이 이전 항과 일정한 차이를 갖는 수역코드 스니펫 (선택)function arithmeticSequence(n: number, a: number, d: number): number[] {\n    if (n <= 0) {\n        return"},{"title":"보이어 무어 알고리즘","slug":"__tech__Algorithm__보이어++++무어++++알고리즘","shortSummary":"날짜와 시간날짜: 2024-05-01시간: 18:27주제 또는 키워드[[Boyer-Moore]]간단한 내용다수의 요소를 효율적으로 찾기 위해 고안된 알고리즘기본 원리후보자와 카운트(0으로 초기화) 존재카운트가 0일 경우 현재 요소를 새로운 후보자로 설정현재 요소가 후보와 같다면 1 증가 다르면 1 감소검증: 찾은 후보가 실제 다수인지 체크, 일반적인 경우 후보가"},{"title":"선형 탐색","slug":"__tech__Algorithm__선형++++탐색","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 17:26주제 또는 키워드[[Algorithm]]\n[[탐색]]\n[[Linear Search]]간단한 내용가장 기본적인 탐색 방법 중 하나, 데이터 구조의 시작부터 끝까지 순차적으로 원하는 값을 찾을 때까지 각 항목 확인복잡도: O(n)코드 스니펫 (선택)function linearSearch(arr: number[], target: number): number {\n  for (let i = 0;"},{"title":"순열","slug":"__tech__Algorithm__순열","shortSummary":"날짜와 시간날짜: 2024-04-08시간: 10:23주제 또는 키워드[[Algorithm]]\n[[permutation]]간단한 내용정의: 서로 다른 n개의 원소에서 r개를 중복없이 순서를 고려하여 선택하거나 나열하거나 하는것(단, 0 < r ≤ n)즉 [0,1,2] 와 [2,1,0]은 다르다코드 스니펫 (선택)function getPermutations<T>(array: T[], size?: number): T[][] {\n    const r"},{"title":"이진 탐색","slug":"__tech__Algorithm__이진++++탐색","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 21:47주제 또는 키워드[[Algorithm]]\n[[탐색]]\n[[Binary Search]]간단한 내용정렬된 데이터 구조에서 중간값을 찾고자 하는 값을 비교하여 탐색 범위를 절반씩 줄여가며 값을 찾는 방법복잡도: O(logn)코드 스니펫 (선택)function binarySearch(arr: number[], target: number): number {\n  let low = 0;\n  let high ="},{"title":"점화식","slug":"__tech__Algorithm__점화식","shortSummary":"날짜와 시간날짜: 2024-04-22시간: 23:37주제 또는 키워드[[Algorithm]]\n[[재귀식]]\n[[recurrence relation]]간단한 내용코드 스니펫 (선택)"},{"title":"조합","slug":"__tech__Algorithm__조합","shortSummary":"날짜와 시간날짜: 2024-04-08시간: 22:31주제 또는 키워드[[Algorithm]]\n[[Combination]]간단한 내용정의: 주어진 집합 내에서 순서를 고려하지 않고 일정한 수의 요소를 선택하는 방법즉 [1,0] = [0,1] ===> [0,1]코드 스니펫 (선택)function getCombinations(arrayL: number, r: number): number[][] {\n    const arr: number[] = Array.from({ length:"},{"title":"탐색","slug":"__tech__Algorithm__탐색","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 17:23주제 또는 키워드[[Algorithm]]\n[[Dijkstra]]간단한 내용데이터 구조 내에서 원하는 데이터 항목을 찾기 위해 사용되는 알고리즘코드 스니펫 (선택)"},{"title":"해시 테이블","slug":"__tech__Algorithm__해시++++테이블","shortSummary":"날짜와 시간날짜: 2024-04-09시간: 21:54주제 또는 키워드[[Algorithm]]\n[[탐색]]\n[[Hash Table]]간단한 내용해시 함수를 사용하여 데이터의 고유한 인덱스를 계산하고, 이 인덱스를 사용하여 데이터를 빠르게 탐색평균 복잡도: O(1), 최악: O(n)코드 스니펫 (선택)let map = new Map<number, string>();\nmap.set(1, \"apple\");\nmap.set(2, \"banana\");\nmap.set(3, \"cherry\");\n\nfunction searchInMap(map: Map<number, string>, key: number): string"},{"title":"Code Quality","slug":"__tech__Code++++Quality","shortSummary":"[[Refactoring]]\n[[SonarQube]]"},{"title":"Collection","slug":"__tech__Collection","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 16:28주제 또는 키워드[[Collection]]\n[[data structure]]간단한 내용여러 개 값을 모아놓은 데이터 구조를 일반적으로 가리키는 용어예를 들면 배열 리스트 큐  스택등이 있다.코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count: 0 };\nfunction reducer(state = initialState, action) { "},{"title":"Cron","slug":"__tech__Cron","shortSummary":"CRON서버"},{"title":"Curl","slug":"__tech__Curl","shortSummary":"defaultgetexample\ncurl https://www.example.com/ referencehttps://curl.se/docs/manual.html"},{"title":"Queue","slug":"__tech__Data++++Structure__Queue","shortSummary":""},{"title":"Stack","slug":"__tech__Data++++Structure__Stack","shortSummary":""},{"title":"Encapsulation","slug":"__tech__Encapsulation","shortSummary":"날짜와 시간날짜: 2024-01-17시간: 22:42주제 또는 키워드[[캡슐화]]간단한 내용객체의 데이터와 그 데이터를 조작하는 메서드를 하나의 단위로 묶는것두가지의 이점정보 은닉언티페이스와 구현의 분리([[Separation of concerns]])코드 스니펫 (선택)"},{"title":"Optional chaining","slug":"__tech__JavaScript__Optional++++chaining","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 18:10주제 또는 키워드[[JavaScript]]에서 [[Optional chaining]]문법간단한 내용연산자: ?.각 참조가 유효한지 명시적으로 검증하지 않고, 연결된 객체 체인 내에 깊숙이 위치한 속성 값을 읽을 수 있다.?.연산자는.([[Chaining]] 연산자)와 유사하게 작동하지만, 만약 참조가 [[nullish]]라면 에러가 발생하는 것 대신에 표현식의 리턴 값을 undefined로"},{"title":"nullish","slug":"__tech__JavaScript__nullish","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 18:34주제 또는 키워드간단한 내용JavaScript 에서 Nullish 값은 null또는 undefined값 중 하나입니다. Nullish 값은 항상 falsy 입니다.코드 스니펫 (선택)"},{"title":"Javascript Event Loop","slug":"__tech__Javascript++++Event++++Loop","shortSummary":"날짜와 시간날짜: 2024-05-02시간: 13:16주제 또는 키워드[[JavaScript]]\n[[Event Loop]]간단한 내용구성 요소Call [[Stack]]실행중인 코드의 함수 호출을 추적함수가 호출되면 스택에 푸시되고 끝나면 pop함스택이 비어 있으면 task 큐에서 다음 작업을 가져옴[[Heap]]객체가 저장되는 메모리 영역, 단순히 메모리의 큰 영역을 지칭동적으로 생성된 데이터를 저장Task [[Queue]]외부 비동기 처리"},{"title":"PWA","slug":"__tech__PWA","shortSummary":"날짜와 시간날짜: 2024-01-26시간: 11:15주제 또는 키워드Progressive Web Application간단한 내용PWA는 웹과 네이티브 앱의 기능 모두의 이점을 갖도록 수 많은 특정 기술과 표준 패턴을 사용해 개발된 웹 앱입니다.코드 스니펫 (선택)"},{"title":"REST api","slug":"__tech__REST++++api","shortSummary":"날짜와 시간날짜: 2024-04-29시간: 11:19주제 또는 키워드[[REST]]간단한 내용rest 스타일을 따르는 api코드 스니펫 (선택)"},{"title":"REST","slug":"__tech__REST","shortSummary":"날짜와 시간날짜: 2024-04-29시간: 11:11주제 또는 키워드[[REST]]간단한 내용두 컴퓨터 시스템이 인터넷을 통해 정보를 안전하게 교환하기 위해 사용하는 인터페이스.REST란?Representational State TransferAPI 작동 방식에 대한 조건을 부과하는 소프트웨어 아키텍처원칙균일한 인터페이스무상태계층화 시스템캐시 가능온디맨드 코드이점확장성과 유연성, 독링성이 좋음코드 스니펫 (선택)"},{"title":"RESTful API","slug":"__tech__RESTful++++API","shortSummary":"날짜와 시간날짜: 2024-03-31시간: 21:53주제 또는 키워드[[REST]]\n[[RESTful API]]간단한 내용RESTful api는 [[REST]]원칙을 철저하게 준수하는 api작동 방식인터넷 브라우징과 동일함클라이언트가 서버에 요청 전송, 클라이언트가 API 문서에 따라 서버가 이해하는 방식으로 요청 형식 지정서버가 클라이언트를 인증하고 해당 요청을 수행할 수 있는 권한이 클라이언트에 있는지 확인서버가"},{"title":"Effect","slug":"__tech__React__Effect__Effect","shortSummary":"목적첫 랜더링에만 실행되길 원하는 경우[[State]]와는 상관없이 한번만 실행되길원하는 경우특정한 상황에만 실행이 되길 원하는 경우사용법const iRunOnlyOnce = () = {}\nuseEffect(iRunOnlyOnce, [])// fucntion // deps\n//deps \n\tuseEffect(iRunOnlyOnce, [keyword])// fucntion keyword의 변화가 있을때만 실행"},{"title":"Components","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Components","shortSummary":"날짜와 시간날짜: 2024-01-17시간: 21:59주제 또는 키워드[[React]]React 에서 컨포넌트간단한 내용리액트에서 HTMl, CSS, JavaScript가 합쳐진 재사용 가능한 하나의 단위이자 요소장점Reusable Building BlocksRelated Code Lives TogetherSeparation of Concerns: 디자인과 개발의 분리, 다른 데이터 = 다른 UI코드 스니펫 (선택)"},{"title":"Configuring Components With \"Props\"","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Configuring++++Components++++With++++\"Props\"","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 22:39주제 또는 키워드[[React]][[Props]]을 사용한 컨포넌트 재사용간단한 내용커스텀한 컨포넌트의 속성들도 커스텀이 가능함커스텀한 속성들의 모음이 [[Props]]객체 타입으로 저장되며 [[Chaining]]문법으로 접근 가능함js 스프레드 문법 사용해서 전체를 넘겨줄수있음코드 스니펫 (선택)"},{"title":"JSX","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__JSX","shortSummary":"날짜와 시간날짜: 2024-01-17시간: 22:48주제 또는 키워드[[React]][[JSX]]간단한 내용JavaScript Syntax eXtension브라우저에서는 사용이 불가능함JSX 코드를 빌드해서 사용가능 하도록 변환함함수 생성 규칙Name Starts With Uppercase Character(must)Returns \"Renderable\" Contenttag을 대문자로 적으면 React에서 함수로 실행됨일반적으로 React에서는 하나의 JSX에 하나의 [[Component]]"},{"title":"Loading Img in JSX","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Loading++++Img++++in++++JSX","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 22:23주제 또는 키워드[[React]]JSX에서 이미지 로드간단한 내용import 사용해서 불러오기 [[React Deploy]]랑 상관 있음코드 스니펫 (선택)import img from 'assets/test.png'\n\n\nfunction test() {\n\treturn (\n\t<>\n\t\t<img src={img}/>\n\t</>\n\t)\n}"},{"title":"Outputting Dynamic Content in JSX","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Outputting++++Dynamic++++Content++++in++++JSX","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 22:10주제 또는 키워드[[React]]React에서 정적 출력과 동적 출력 차이간단한 내용정적 출력은 변경 할 수 없음동적 출력은 런타임에서 파생동적 출력을 위해서 js를 실행시킬려면 {}에 작성 => 중괄호 문법코드 스니펫 (선택)<h1> {1 + 1}</h1>"},{"title":"State 관리 & Hooks 사용법","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__State++++관리++++ambersand++++Hooks++++사용법","shortSummary":"날짜와 시간날짜: 2024-01-25시간: 12:24주제 또는 키워드[[React]][[State]][[Hooks]]간단한 내용StateReact에서 업데이트하기 위해 내장함수 사용해서 업데이트훅이 발동되면 컨포넌트가 재시작Hooksuse로 시작하는 함수들이 훅중첩은 허용하지 않음, 항상 컨포넌트 내 최상위에 존재문법const [val, setVal] = useState('initial state value')코드 스니펫 (선택)//Hooks 예시\nfunction App() {\nconst [val, setVal] = useState(0);\n}\n//"},{"title":"UI를 업데이트하지 않는 법","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__UI를++++업데이트하지++++않는++++법","shortSummary":"날짜와 시간날짜: 2024-01-25시간: 12:17주제 또는 키워드[[React]]react에서 UI 업데이트 하는법간단한 내용React 코드는 한번씩만 실행됨이벤트가 발생해도 업데이트 되지 않음업데이트 하고 싶으면 [[State]]코드 스니펫 (선택)"},{"title":"children Prop","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__children++++Prop","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 23:27주제 또는 키워드[[React]]자식 속성간단한 내용컨포넌트 자식을 가져오는 내장 속성코드 스니펫 (선택)<Modal>\n\t<h2>tesdt</h2>\n\t<p>tsedgdfkgldlk</p>\n</Modal>\n\nfunction Modal(props) {\n\treturn <div>{props.children}</div>\n}"},{"title":"event handle","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__event++++handle","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 23:43주제 또는 키워드[[React]]이벤트 처리간단한 내용리액트 내장 핸들러 사용(onClick={}){}안에는 함수를 넣고 ()는 생략 => ()를 붙이면 이벤트 발생할때 대신 그 줄이 실행될때 함수가 실행코드 스니펫 (선택)"},{"title":"더 다양한 Prop(속성) 문법","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__더++++다양한++++Prop(속성)++++문법","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 22:53주제 또는 키워드[[React]]다양한 Prop(속성) 문법간단한 내용단일 Prop 객체 전달<CoreConcept\ntitle={CORE_CONCEPTS[0].title}\ndescription={CORE_CONCEPTS[0].description}\nimage={CORE_CONCEPTS[0].image} />\n\n// or\n\n<CoreConcept\n{...CORE_CONCEPTS[0]} />받은 Prop들을 단일 객체로 그룹화받는 쪽에서 [[Rest Property]]문법 사용해서 단일 객체로 그룹화export default function CoreConcept({ ...concept }) {\n// ...concept groups multiple values into a single object\n//"},{"title":"컨포넌트에 스타일 불러오기","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__컨포넌트에++++스타일++++불러오기","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 23:17주제 또는 키워드[[React]]컨포넌트에 스타일 불러오기간단한 내용같은 디렉토리에 두는걸 지향import \"stlye.css\"스타일을 나눠놓는것은 편하지만 그 컨포넌트에만 한정적으로 적용되는 것은 아니라는 걸 명심코드 스니펫 (선택)"},{"title":"함수를 Prop의 값으로 전달하기","slug":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__함수를++++Prop의++++값으로++++전달하기","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 23:46주제 또는 키워드[[React]]함수를 prop으로 전달하기간단한 내용코드 스니펫 (선택)function handleClick() {  \n    \n}\n<TabButton onSelect={handleClick}>Components</TabButton>\n// \n\nexport default function TabButton(props) {  \n  return (  \n    <li>  \n  "},{"title":"Choosing the State Structure","slug":"__tech__React__React++++공식++++문서++++공부__Choosing++++the++++State++++Structure","shortSummary":"날짜와 시간날짜: 2023-10-03시간: 15:49주제 또는 키워드When to use a single vs multiple state variablesWhat to avoid when organizing stateHow to fix common issues with the state structure간단한 내용상태 구조화 원칙그룹 관련 상태입니다. 항상 두 개 이상의 상태 변수를 동시에 업데이트하는 경우"},{"title":"Extracting State Logic into a Reducer","slug":"__tech__React__React++++공식++++문서++++공부__Extracting++++State++++Logic++++into++++a++++Reducer","shortSummary":"날짜와 시간날짜: 2023-10-15시간: 16:27주제 또는 키워드[[React]]What a reducer function isHow to refactor useState to useReducerWhen to use a reducerHow to write one well간단한 내용useState에서 useReducer로 migration하는 3단계Move from setting state to dispatching actions.Write a reducer function.Use the reducer from your componentComparing useState and useReducerCode size: 일반적으로"},{"title":"Importing And Exporting Components","slug":"__tech__React__React++++공식++++문서++++공부__Importing++++And++++Exporting++++Components","shortSummary":"날짜와 시간날짜: 2023-10-01시간: 16:40주제 또는 키워드[[React]]리액트에서 Root component란Component를 가져오고 내보내는 법default and named exporting하나의 파일에서 여러 component import export여러 components 분할간단한 내용export는 두가지default, named관련 링크 https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/export#using_the_default_exportexport default name1();\nexport name2();\n////////\n\nimport name1 from '...'\nimport {name2} from '...'코드 스니펫 (선택)// Redux 예시 \nconst"},{"title":"JavaScript in JSX with Curly Braces","slug":"__tech__React__React++++공식++++문서++++공부__JavaScript++++in++++JSX++++with++++Curly++++Braces","shortSummary":"날짜와 시간날짜: 2023-10-01시간: 21:30주제 또는 키워드[[React]]따음표 문자열 전달 법중괄호 사용하여 JSX내에서 JavaScript 변수 참조하는 방법중괄호 사용하여 JSX내에서 JavaScript 함수 호출하는 방법중괄호 사용하여 JSX내에서 JavaScript 객체 사용하는 방법간단한 내용따옴표 안의 JSX속성은 문자열로 전달중괄호 사용하면 JavaScript 논리와 변수를 마크업으로 가져올 수있음JSX태그 콘텐츠"},{"title":"Passing Props to a Components","slug":"__tech__React__React++++공식++++문서++++공부__Passing++++Props++++to++++a++++Components","shortSummary":"날짜와 시간날짜: 2023-10-01시간: 21:44주제 또는 키워드[[React]]How to pass props to a componentHow to read props from a componentHow to specify default values for propsHow to pass some JSX to a componentHow props change over time간단한 내용To pass props, add them"},{"title":"Preserving and Resetting State","slug":"__tech__React__React++++공식++++문서++++공부__Preserving++++and++++Resetting++++State","shortSummary":"날짜와 시간날짜: 2023-10-15시간: 15:36주제 또는 키워드[[React]]How React “sees” component structuresWhen React chooses to preserve or reset the stateHow to force React to reset component’s stateHow keys and types affect whether the state is preserved간단한 내용react는 ui tree를 사용, JSX로 부터state는"},{"title":"Queueing a Series of State Updates","slug":"__tech__React__React++++공식++++문서++++공부__Queueing++++a++++Series++++of++++State++++Updates","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 17:41주제 또는 키워드[[React]]What “batching” is and how React uses it to process multiple state updatesHow to apply several updates to the same state variable in a row간단한 내용React는 이벤트 핸들러의 코드가 모두 끝난뒤 State를 업데이트한다(주문을 다 받은"},{"title":"React LifeCycle","slug":"__tech__React__React++++공식++++문서++++공부__React++++LifeCycle","shortSummary":"tags: [#React]\ncreated: 2023-09-28 22:44\nmodified: 2023-09-28 22:44출처저자: 저자 이름출판사: 출판사 이름출판일: 출판일ISBN: ISBN 번호주요 내용주요 내용 요약인용구인용구내 생각자신의 생각 및 해석참고 노트[[React]]참고 자료[[projects_wojtekmaj_pl_react_lifecycle_methods_diagram.pdf]]"},{"title":"React 개요","slug":"__tech__React__React++++공식++++문서++++공부__React++++개요","shortSummary":"[[react tutorial]] [[React]]날짜와 시간날짜: 2023-09-28시간: 12:11주제 또는 키워드ReactJS 개요간단한 내용React란 Javascript 라이브러리컴포넌트라는 작고 고립된 코드의 파편을 이용하여 복잡한 ui 구성개별 컨포넌트는 <span style='color: purple'> props</span>라는 매개변수를 받아오고 <span style='color: purple'> render</strong>함수를 통해 표시할 뷰계층 구조를 반환render 함수는 화면을 보고자 하는"},{"title":"Reacting to Input with State","slug":"__tech__React__React++++공식++++문서++++공부__Reacting++++to++++Input++++with++++State","shortSummary":"날짜와 시간날짜: 2023-10-03시간: 15:33주제 또는 키워드[[React]]How declarative UI programming differs from imperative UI programmingHow to enumerate the different visual states your component can be inHow to trigger the changes between the different visual states from code간단한 내용차이점명령적 UI는 구형 방법과"},{"title":"React의 이해","slug":"__tech__React__React++++공식++++문서++++공부__React의++++이해","shortSummary":"날짜와 시간날짜: 2023-09-28시간: 10:33주제 또는 키워드[[React]]까지의 과정간단한 내용왜 react가 만들어진 이유바닐라 자바스크립는 작은 기능을 많드는데 많은 시간이 소모(자원)모든걸 자바스크립트를 통해 만들수 있음,코드 스니펫 (선택)<!DOCTYPE html>\n<-- 바닐라 자바스크립트 -->\n<html>\n\t<body>\n\t\t<span>Total clicks: 0</span>\n\t\t<button id='btn'>Click me</button>\n\t</body>\n\t<script>\n\t\tlet counter = 0;\n\t\tconst button = document.getElementById('btn');\n\t\tconst span ="},{"title":"Render and Commit","slug":"__tech__React__React++++공식++++문서++++공부__Render++++and++++Commit","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 16:32주제 또는 키워드[[React]]What rendering means in ReactWhen and why React renders a componentThe steps involved in displaying a component on screenWhy rendering does not always produce a DOM update간단한 내용React 앱의 모든 화면 업데이트는 세 단계로 이루어집니다.triggerrenderingcommit엄격"},{"title":"Sharing State Between Components","slug":"__tech__React__React++++공식++++문서++++공부__Sharing++++State++++Between++++Components","shortSummary":"날짜와 시간날짜: 2023-10-04시간: 22:33주제 또는 키워드How to share state between components by lifting it upWhat are controlled and uncontrolled components간단한 내용자식 컨포넌트에서 동시에 컨트롤이 필요한 경우 부모 컨포넌트로 state를 넘긴다컨포넌트의 중요 정보가 props로 사용하여 구성된다면 그건 controlled component코드 스니펫 (선택)"},{"title":"State as a Snapshot","slug":"__tech__React__React++++공식++++문서++++공부__State++++as++++a++++Snapshot","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 17:09주제 또는 키워드[[React]]How setting state triggers re-rendersWhen and how state updatesWhy state does not update immediately after you set itHow event handlers access a “snapshot” of the state간단한 내용set State => re-renderuseState를 호출하면 React는 그 렌더링의 snapshot을"},{"title":"State-A component's Meomory","slug":"__tech__React__React++++공식++++문서++++공부__State-A++++component's++++Meomory","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 16:15주제 또는 키워드[[React]]How to add a state variable with the useState HookWhat pair of values the useState Hook returnsHow to add more than one state variableWhy state is called local간단한 내용useState hook이 제공하는것랜더링 사이에 상태 변수를 유지변수를 업데이트하고 컴포넌트를 랜더링 하기위해"},{"title":"Updating Arrays in State","slug":"__tech__React__React++++공식++++문서++++공부__Updating++++Arrays++++in++++State","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 18:39주제 또는 키워드[[React]]How to add, remove, or change items in an array in React stateHow to update an object inside of an arrayHow to make array copying less repetitive with Immer간단한 내용| |avoid (mutates the array)|prefer (returns"},{"title":"Updating Objects in State","slug":"__tech__React__React++++공식++++문서++++공부__Updating++++Objects++++in++++State","shortSummary":"날짜와 시간날짜: 2023-10-02시간: 18:00주제 또는 키워드[[React]]How to correctly update an object in React stateHow to update a nested object without mutating itWhat immutability is, and how not to break itHow to make object copying less repetitive with Immer간단한 내용object.x 이런식으로"},{"title":"Writing Markup with JSX","slug":"__tech__React__React++++공식++++문서++++공부__Writing++++Markup++++with++++JSX","shortSummary":"날짜와 시간날짜: 2023-10-01시간: 16:50주제 또는 키워드[[React]]React가 마크업과 렌더링 혼합을 하는 이유JSX와 HTML차이JSX가 정보를 표시하는 방법간단한 내용웹 상화작용적으로 변하면서 논리가 콘텐츠에도 영향이 감JSX가 몇가지 규칙이 있음단일 루트 요소 반환모든 태그를 닫아야함CamelCase를 사용할것(aria-*, data-*은 제외)코드 스니펫 (선택)추후 액션 아이템[[JavaScript in JSX with"},{"title":"Your First Component","slug":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","shortSummary":"[[React]]날짜와 시간날짜: 2023-10-01시간: 16:35주제 또는 키워드React의 첫번쨰 컨포넌트 만들기간단한 내용[[React]]에서는 컨포넌트를 재사용 가능한 ui요소로 생성할수 잇음[[React]]앱에서는 모든 UI가 컨포넌트[[React]] [[Component]]는 다음 두가지를 제외한 일반적인 [[JavaScript in JSX with Curly Braces]]항상 대문자로 시작JSX markup을 리턴코드 스니펫 (선택)추후 액션 아이템[[Importing And Exporting"},{"title":"React","slug":"__tech__React__React","shortSummary":"날짜와 시간날짜: 2023-09-28시간: 10:27주제 또는 키워드ReactJS간단한 내용React란?, facebook에서 만든 [[자바스트립트]] [[라이브러리]]왜 React?안정화 단계에 라이브러리, 페이스북에서 많은 자원을 쓰며 개발중거대한 커뮤니티추후 액션 아이템노마드 코더 react 강의 듣기정리"},{"title":"사용 가능한 tag","slug":"__tech__React-Native__사용++++가능한++++tag","shortSummary":"날짜와 시간날짜: 2024-04-07시간: 16:44주제 또는 키워드[[React-Native]]\n[[Tag]]간단한 내용| tag              | explain                 "},{"title":"Record","slug":"__tech__Record","shortSummary":""},{"title":"객체 통째로 넘기기","slug":"__tech__Refactoring__API++++리팩터링__객체++++통째로++++넘기기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:23주제 또는 키워드[[Refactoring]]간단한 내용함수가 [[레코드]]자체에 의존하기를 원치 않을 때는 이 리팩터링을 수행하지 않는데, 레코드와 함수가 서로 다른 모듈에 속한 상황이 특히 더 그렇다한 객체가 제공하는 기능 중 항상 똑같은 일부만을 사용하는 코드가 많다면, 그 기능만 따로 묶어서"},{"title":"매개변수를 질의 함수로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:34주제 또는 키워드[[Refactoring]]\n[[질의 함수]]\n반대 리팩터링: [[질의 함수를 매개변수로 바꾸기]]간단한 내용중복을 피할 수 있으면 피하자매개변수가 있다면 결정 주체가 호출자가 되고, 매개변수가 없다면 피호출 함수가 된다.매개변수를 제거하지 말아야할 경우는 제거하면 피호출 함수에 원치 않는 의존성이 생길 때다대상 함수가 [[참조"},{"title":"명령을 함수로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__명령을++++함수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:13주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[함수를 명령으로 바꾸기]]간단한 내용명령이 복잡하지 않고 단순하다면 그냥 평범한 함수로 바꾸자코드 스니펫 (선택)"},{"title":"생성자를 팩터리 함수로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__생성자를++++팩터리++++함수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:59주제 또는 키워드[[Refactoring]]간단한 내용생성자가 항상 좋은 것은 아니다.  자바의 경우 생성자를 정의한 클래스의 인스턴스를 반환해야 한다.팩터리 함수는 이런 제약이 없음절차팩터리 함수를 만든다. 팩터리 함수의 본문에서는 원래의 생성자를 호출한다.생성자를 호출하던 코드를 팩터리 함수 호출로 바꾼다.하나씩 수정할 때마다"},{"title":"세터 제거하기","slug":"__tech__Refactoring__API++++리팩터링__세터++++제거하기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:55주제 또는 키워드[[Refactoring]]간단한 내용사람들이 무조건 접근자 메서드를 통해서만 필드를 다룰려고 할때클라이언트에서 생성 스크립트를 사용해 객체를 생성할때생성 스크립트란 생성자를 호출한 후 일련의 세터를 호출하여 객체를 완성하는 형태의 코드를 말한다.불변 데이터의 경우 이렇게 하는게 좋을것같다.설정해야 할 값을 생성자에서 받지"},{"title":"수정된 값 반환하기","slug":"__tech__Refactoring__API++++리팩터링__수정된++++값++++반환하기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:16주제 또는 키워드[[Refactoring]]간단한 내용절차함수가 수정된 값을 반환하게 하여 호출자가 그 값을 자신의 변수에 저장하게 한다.테스트피호출 함수 안에 반환할 값을 가리키는 새로운 변수를 선언테스트계산이 선언과 동시에 이뤄지도록 통합한다.테스트피호출 함수의 변수 이름을 새 역학에 어울리도록 바꿔준다.테스\u001b트코드 스니펫 (선택)let totalAscent"},{"title":"예외를 사전확인으로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__예외를++++사전확인으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:28주제 또는 키워드[[Refactoring]]간단한 내용예외는 뜻밖에 오류에만 사용미리 검사할수 잇으면 하기try catch 제거하기로 볼수있다.코드 스니펫 (선택)"},{"title":"오류 코드를 예외로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__오류++++코드를++++예외로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:23주제 또는 키워드[[Refactoring]]간단한 내용예외 처리는 정확히 예상 밖의 동작일때만 쓰여야함예외를 던지는 코드를 프로그램 종료 코드로 바꿔도 프로그램이 여전히 정상 동작할지를 따져보고 정상 동작하지 않을것 같다면 에외를 사용하지 말것, 대신 프로그램을 정상 흐르으로 되돌리게끔 처리해야한다.코드 스니펫 (선택)if(data)\n\treturn new"},{"title":"질의 함수를 매개변수로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:43주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[매개변수를 질의 함수로 바꾸기]]간단한 내용전역 변수를 잠조하거나 제거하길 원하는 원소를 참조하는 경우 배개면수로 바꾼다.두가지 극단적인 상황이 잇음모든것을 매개변수로 만드는 경우여기쯤을 찾자함수들끼리 많은 것을 공유하여 수많은 결합을 만드는 경우단점은 호출자가 어떤 값을 전달할지 알야하는데"},{"title":"질의 함수와 변경 함수 분리하기","slug":"__tech__Refactoring__API++++리팩터링__질의++++함수와++++변경++++함수++++분리하기","shortSummary":"날짜와 시간날짜: 2023-11-02시간: 19:05주제 또는 키워드[[Refactoring]]간단한 내용질의 함수(읽기 함수)는 모두 [[겉보기 부수효과]]가 없어야한다.값을 반환하면서 부수효과도 있는 함수를 발견하면 상태 변경부분과 질의 부분으로 나눌것절차대상 함수를 복제하고 질의 목적에 충실한 이름을 짓는다새 질의 함수에서 부수효과를 모두 제거한다.정적 검사를 수행원래 함수를 호출하는 곳을"},{"title":"플래그 인수 제거하기","slug":"__tech__Refactoring__API++++리팩터링__플래그++++인수++++제거하기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:05주제 또는 키워드[[Refactoring]]간단한 내용플래그가 있을 경우 함수들의 기능 차이가 잘 들어나지 않는다.불리언 값이 있다면 이게 무슨 뜻인지 알기 힘들다절차매개변수로 주어질 수 있는 값 각각에 대응하는 명시적 함수들을 생성한다.원래 함수를 호출하는 코드들을 모두 찾아서 각 리터럴 값에 대응되는"},{"title":"함수 매개변수화하기","slug":"__tech__Refactoring__API++++리팩터링__함수++++매개변수화하기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 19:51주제 또는 키워드[[Refactoring]]간단한 내용두 함수의 로직이 비슷하고 단지 리터럴 값만 다르다면 매개변수로 인자를 받아 처리절차비슷한 함수 중 하나를 선택한다.[[함수 선언 바꾸기]]로 리터럴들을 매개변수로 처리한다.이 함수를 호출하는 곳 모두에 적절한 리터럴 값을 추가한다.테스트한다.매개변수로 받은 값을 사용하도록 함수 본문을"},{"title":"함수를 명령으로 바꾸기","slug":"__tech__Refactoring__API++++리팩터링__함수를++++명령으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:05주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[명령을 함수로 바꾸기]]간단한 내용명령이란함수를 그 함수만을 위한 객체 안으로 캡슐화하면 더 유용해지는 상황이 있는데 이런 객체를 가리켜 명령 객체 혹은 명령 이라 한다.절차대상 함수의 기능을 옮길 빈 클래스를 만든다. 클래스 이름은 함수 이름에"},{"title":"Reason of Refactoring","slug":"__tech__Refactoring__Reason++++of++++Refactoring","shortSummary":"날짜와 시간날짜: 2023-10-17시간: 21:27주제 또는 키워드[[Refactoring]]\n[[Refactoring principle]]리팩터링하는 이유간단한 내용난 뛰어난 프로그래머가 아니다. 단지 뛰어난 습관을 지닌 괜찮은 프로그래머일 뿐이다. - 켄트벡리팩터링하면 소프트웨어 설계가 좋아진다.리팩터링하면 소프트웨어를 이해하기 쉬워진다.버그를 쉽게 찾을 수 있다.프로그래밍 속도를 높일 수 있다.코드 스니펫 (선택)"},{"title":"단계 쪼개기","slug":"__tech__Refactoring__Refactoring++++Basic__단계++++쪼개기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 21:41주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]간단한 내용서로 다른 두 대상을 한꺼번에 다루는 코드를 발견하면 나눠라가장 좋은 방법이 두 단계로 쪼개는것절차두 번째 단계에 해당하는 코드를 독립 함수로 추출한다.테스트중간 데이터 구조를 만들어서 앞에서 추출한 함수의 인수로 추가한다.테스트추출한 두 번째 단께 함수의"},{"title":"매개변수 객체 만들기","slug":"__tech__Refactoring__Refactoring++++Basic__매개변수++++객체++++만들기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 21:11주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]간단한 내용데이터 뭉치를 데이터 구조로 묶으면 데이터 사이의 관계가 명확해진다데이터의 적용되는 공통적인 동작을 추출해서 함수로 만들기절차적당한 데이터 구조가 없다면 새로 만든다.테스트한다함수 선언 바꾸기로 새 데이터 구조를 매개변수로 추가한다.테스트한다함수 호출 시 새로운 데이터 구조 인스턴스를"},{"title":"변수 이름 바꾸기","slug":"__tech__Refactoring__Refactoring++++Basic__변수++++이름++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 21:08주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]변수 이름 바꾸기간단한 내용명확한 프로그래밍의 핵심은 이름짓기다.절차폭넓게 쓰이는 변수라면 변수 캡슐화하기를 고려한다.이름을 바꿀 변수를 참조하는 곳을 모두 찾아서, 하나씩 변경한다.테스트코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count: 0 };\nfunction reducer(state = initialState,"},{"title":"변수 인라인하기","slug":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 20:20주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]변수 인라인하기반대 리팩터링:[[변수 추출하기]]간단한 내용변수명이 표현식 자체와 다를 바 없을 때대입문의 우변(표현식)에서 부작용이 생기지는 않는지 확인하다.변수가 불변으로 선언되지 않았다면 불변으로 만든 후 테스트한다.이 변수를 가장 처음 사용하는 코드를 찾아서 대입문 우변의 코드를 바꾼다.테스트한다변수를 사용하는"},{"title":"변수 추출하기","slug":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 20:03주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]변수 추출하기반대 리팩토링: [[변수 인라인하기]]간단한 내용표현식이 너무 복잡할때이름이 통용되는 문맥을 넓힐 때 생기는 단점은 할 일이 늘어난다는것 => [[임시 변수를 질의 함수로 바꾸기]]추출하려는 표현식에 부작용을 없는지 확인한다불변 변수를 하나 선언하고 이름을 붙일 표현식의 복제본을"},{"title":"변수 캡슐화하기","slug":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 20:40주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]변수 캡슐화하기간단한 내용객체의 데이터를 항상 private로 유지하자절차\n1. 변수로의 접근(get)과 갱신(update)을 전담하는 캡슐화 함수들을 만든다\n2. 정적 검사를 수행한다.\n3. 변수를 직접 참조하던 부분을 모두 적잘한 캡슐화 함수 호출로 바꾼다. 하나씩 바꿀 때마다 테스트한다.\n4. 변수의 접근 범위(private"},{"title":"여러 함수를 변환 함수로 묶기","slug":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++변환++++함수로++++묶기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 21:29주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]간단한 내용이 방식 대신 [[여러 함수를 클래스로 묶기]]로 처리해도 된다.원본 데이터가 코드 안에서 갱신될 때는 클래스로 묶는편이 훨씬 낫다.변환 함수로 묶으면 가공한 데이터를 새로운 레코드에 저장하기 떄문, 원본 데이터가 수정되면 일관성이 깨질 수 있다.절차변환할"},{"title":"여러 함수를 클래스로 묶기","slug":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 21:22주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]간단한 내용절차함수들이 공유하는 공통 데이터 [[레코드 캡슐화하기]]공통 데이터가 레코드 구조로 묶여 있지 않다면 먼저 [[매개변수 객체 만들기]]로 데이터를 하나로 묶는다공통 레코드를 사용하는 함수 각각을 새 클래스로 옮긴다([[함수 옮기기]]데이터를 조작하는 로직들은 [[함수 추출하기]]해서 새 클래스로"},{"title":"함수 선언 바꾸기","slug":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 20:25주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]다른 이름: 함수 이름 바꾸기, 시그니처 바꾸기간단한 내용함수 이름이 좋으면 호출문만 보고도 무슨 일을 하는지 파악할 수 있다.주석을 적고 주석을 통해 멋진 이름을 생각해보자간단한 절차매개변수를 제거하려거든 먼저 함수 본문에서 제거 대상 매개변수를 참조하는 곳은"},{"title":"함수 인라인하기","slug":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 18:53주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]함수 인라인하기반대 리팩터링: [[함수 추출하기]]간단한 내용리팩토링 과정중에 잘못 추출된 함수들을 다시 인라인하기다형 메서드인지 확인한다.인라인할 함수를 호출하는 곳을 모두 찾는다.각 호출문을 함수 본문으로 교체한다.하나씩 교체할 때마다 테스트한다.함수 정의(원래 함수)를 삭제한다.코드 스니펫 (선택)function getRating(driver) {\n\treturn moreThanFiveLateDeliveries(driver)"},{"title":"함수 추출하기","slug":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","shortSummary":"날짜와 시간날짜: 2023-10-20시간: 18:22주제 또는 키워드[[Refactoring]]\n[[Refactoring Basic]]함수 추출하기간단한 내용반대 리팩터링: [[함수 인라인하기]]언제 독립된 함수로 묶어야 할지는 의견(중복, 코드 길이 등)이 많지만 목적과 구현의 분리가 가장 합리적이라 생각코드를 보고 무슨일을 하는지 파악하기 힘들다면 함수로 추출한뒤 무슨일에 걸맞는 이름을 짓는다함수가 많아져서 성능"},{"title":"Refactoring principle","slug":"__tech__Refactoring__Refactoring++++principle","shortSummary":"날짜와 시간날짜: 2023-10-17시간: 21:16주제 또는 키워드[[Refactoring]]리팩토링 정의간단한 내용리팩터링: [명사] 소프트웨어의 겉보기 동작은 그대로 유지한채,  코드를 이해하고 수정하기 쉽도록 내부 구조를 변경하는 기법리팩터링(하다): [동사] 소프트웨어의 겉보기 동작은 그대로 유지한 채, 여러 가지 리팩터링 기법을 적용해서 소프트웨어를 재구성하다.<strong style='color: red'>누군가 \"리팩터링하다가"},{"title":"Refactoring","slug":"__tech__Refactoring__Refactoring","shortSummary":"날짜와 시간날짜: 2023-10-17시간: 19:31주제 또는 키워드[[Refactoring]]Refactoring의 간단한 예시, 체험해보기간단한 내용설계가 나쁜 시스템은 수정하기 어렵다. 원하는 동작을 수행하도록 하기 위해서 수정해야할 부분을 찾고, 기존 코드와 잘 맞물려 작동하게 할 방법을 강구하기가 어렵기 때문이다.<br>\n- <strong style='color: red'>프로그램이 새로운 기능을 추가하기에 편한 구조가"},{"title":"겉보기 부수효과","slug":"__tech__Refactoring__겉보기++++부수효과","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 18:43주제 또는 키워드[[겉보기 부수효과]]\n[[observable side effet]]간단한 내용외부 세계 영향을 주는 네트워크 통신, 입출력 변경, 데이터 변형 등을 의미코드 스니펫 (선택)"},{"title":"문장 슬라이드하기","slug":"__tech__Refactoring__기능++++이동__문장++++슬라이드하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 22:09주제 또는 키워드[[Refactoring]]간단한 내용하나의 데이터 구조를 이용하는 문장들은 모아두기절차코드 조각을 이동할 목표 위치를 찾는다. 코드 조각의 원래 위치와 목표 위치 사이의 코드들을 훑어보면서, 조작을 모으고 나면 동작이 달라지는  코드가 있는지 살핀다. 문제가 있다면 이 리팩터링 포기코드"},{"title":"문장을 함수로 옮기기","slug":"__tech__Refactoring__기능++++이동__문장을++++함수로++++옮기기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 21:47주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[문장을 호출한 곳으로 옮기기]]간단한 내용절차반복 코드가 함수 호출 부분과 멀리 떨어져 있다면 문장 슬라이드하기를 적용해 근처로 옮긴다.타깃 함수를 호출하는 곳이 한곳뿐이라면, 단순히 소스 위치에서 해당 코드를 잘라내어 피호출 함수로 복사하고 테스트한다.이 경우라면 나머지"},{"title":"문장을 호출한 곳으로 옮기기","slug":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 21:53주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[문장을 함수로 옮기기]]간단한 내용절차호출자가 한두 개뿐이고 피호출 함수도 간단한 단순한 상황이면, 피호출 함수의 처음(혹은마지막)줄(들)을 잘라내어더 복잡한 상황에서는, 이동하지 '않길' 원하는 모든 문장을 [[함수 추출하기]]한 다음 검색하기 쉬운 이름을 지어준다.원래 [[함수 인라인하기]]한다.추출된 함수의 이름을"},{"title":"반복문 쪼개기","slug":"__tech__Refactoring__기능++++이동__반복문++++쪼개기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 22:15주제 또는 키워드[[Refactoring]]간단한 내용반복문이 두가지 일을 수행하는 경우반복문 쪼개기는 [[함수 추출하기]]와 같이 자주 사용함절차반복문을 복제해 두개로 만든다.반복문이 중복되어 생기는 부수효과를 파악해서 제거한다.테스트완료됐으면 각 반복문을 [[함수 추출하기]]할지 고민코드 스니펫 (선택)"},{"title":"반복문을 파이프라인으로 바꾸기","slug":"__tech__Refactoring__기능++++이동__반복문을++++파이프라인으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 22:19주제 또는 키워드[[Refactoring]]간단한 내용부분 집합을 만든다고 생각하자절차반복문에서 사용하는 컬렉션을 가리키는 변수를 하나 만든다.반복문의 첫 줄부터 시작해서, 각각의 단위 행위를 적절한 컬렉션 파이프라인 연산으로 대체한다. 이때 컬렉션 파이프라인 연산은 1에서 만든 반복문 컬렌션 변수에서 시작하여, 이전 연산의 결과를"},{"title":"인라인 코드를 함수 호출로 바꾸기","slug":"__tech__Refactoring__기능++++이동__인라인++++코드를++++함수++++호출로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 22:06주제 또는 키워드[[Refactoring]]간단한 내용이미 존재하는 함수와 똑같은 일을 하는 인라인 코드를 발견하면 해당 함수 호출로 변경우연히 비슷한 코드가 만들어진 경우는 예외이런 경우는 [[함수 선언 바꾸기]]해주자절차인라인 코드를 함수 호출로 대체한다.테스트코드 스니펫 (선택)let appliesToMass = false;\nfor(const s of states)"},{"title":"죽은 코드 제거하기","slug":"__tech__Refactoring__기능++++이동__죽은++++코드++++제거하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 22:27주제 또는 키워드간단한 내용코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count: 0 };\nfunction reducer(state = initialState, action) {   // ... }"},{"title":"필드 옮기기","slug":"__tech__Refactoring__기능++++이동__필드++++옮기기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 21:38주제 또는 키워드[[Refactoring]]간단한 내용현재 데이터 구조가 적절치 않음을 깨닫게 되면 곧바로 수정할것한 레코드를 변경하려 할 때 다른 레코드의 필드까지 변경해야만 한다면 필드의 위치가 잘못되었다는 신호절차소스 필득 캡슐화되어 있지 않다면 캐슐화한다.테스트한다.타깃 객체에 필드(와 접근자 메서드들)를 생성한다.정적 검사를 수행한다.소스"},{"title":"함수 옮기기","slug":"__tech__Refactoring__기능++++이동__함수++++옮기기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 21:14주제 또는 키워드[[Refactoring]]간단한 내용어떤 함수가 자신이 속한 모듈 A의 요소들보다 다른 모듈 B의 요소들을 더 많이 참조한다면 모듈 B로 옮겨줘야 마땅하다.서로 관련된 여러 함수를 묶을 새로운 컨텍스트가 필요할때는 [[여러 함수를 클래스로 묶기]], [[클래스 추출하기]]사용절자선택한 함수가 현재 컨텍스트에서"},{"title":"값을 참조로 바꾸기","slug":"__tech__Refactoring__데이터++++조직화__값을++++참조로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 19:51주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[참조를 값으로 바꾸기]]간단한 내용논리적으로 같은 데이터를 물리적으로 복제해 사용할 때 가장 크게 문제되는 상황은 그 데이터를 갱신해야할때, 전부 갱신해줘야함이럴 경우 값을 참조로 변경하면 하나만 존재, 하나만 변경해주면 된다.절차같은 부류에 속하는 객체들을 보관할 저장소를"},{"title":"매직 리터럴 바꾸기","slug":"__tech__Refactoring__데이터++++조직화__매직++++리터럴++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 19:57주제 또는 키워드[[Refactoring]]간단한 내용3.14같은거 변수로 선언해두기, 단 같은 리터널이어도 다른 의미라면 다른 변수로 사용코드 스니펫 (선택)"},{"title":"변수 쪼개기","slug":"__tech__Refactoring__데이터++++조직화__변수++++쪼개기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 12:43주제 또는 키워드[[Refactoring]]간단한 내용변수 하나당 역할 하나여러 용도로 쓰이는 변수는 혼란을 준다절차변수를 선언한 곳과 값을 처음 대입하는 곳에서 변수 이름을 바꾼다.가능하면 이때 불변으로 선언이 변수에 두 번째로 값을 대입하는 곳 앞까지의 모든 참조를 새로운 변수 이름으로 바꾼다.두"},{"title":"참조를 값으로 바꾸기","slug":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 19:45주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[값을 참조로 바꾸기]]간단한 내용객체를 다른 객체에 중첩하면 내부 객체를 참조 혹은 값으로 취급할수있다.참조가 필요할때 사용절차후보 클래스가 불변인지, 혹은 불변이 될 수 있는지 확인한다.각각의 세터를 하나씩 [[세터 제거하기]]제거한다.이 값 객체의 필드들을 사용하는 동치성 비교"},{"title":"파생 변수를 질의 함수로 바꾸기","slug":"__tech__Refactoring__데이터++++조직화__파생++++변수를++++질의++++함수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 18:52주제 또는 키워드[[Refactoring]]간단한 내용가변 데이터의 유호 범위를 가능한 좁히자예외피연사자 데이터가 불변이라면 계산 결과도 일정하므로 예외새로운 데이터 구조를 생성하는 변형 연산이라면 대체가 가능해도 그대로 두자변형 연사의 종류데이터 구조를 감싸며 그 데이터에 기초하여 계산한 결과를 속성으로 제공하는 객체데이터 구조를"},{"title":"필드 이름 바꾸기","slug":"__tech__Refactoring__데이터++++조직화__필드++++이름++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-25시간: 12:51주제 또는 키워드[[Refactoring]]간단한 내용함수 이름 바꾸기랑 같음코드 스니펫 (선택)class Organization {\n\tget name() {...}\n}=>class Organization {\n\tget title() {...}\n}"},{"title":"두개의 모자","slug":"__tech__Refactoring__두개의++++모자","shortSummary":"날짜와 시간날짜: 2023-10-17시간: 21:24주제 또는 키워드[[Refactoring]]\n[[Refactoring principle]]기능추가 vs 리팩터링간단한 내용두개의 모자란 기능 추가를 할땐 기능추가 모자를 쓰고 기존 코드는 건드리지 않고 새 기능을 추가하기만하고 리팩토링 할땐 추가 기능을 넣지 않고 리팩토링만 한다두 모자를 자주 바꿔 쓰면서 좋은 코드를 만들어보자코드 스니펫"},{"title":"레코드","slug":"__tech__Refactoring__레코드","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 16:01주제 또는 키워드[[Record]]간단한 내용기본적인 자료 구조를 뜻함각기 다른 자료형에 속할 수 있는 필드의 모임코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count: 0 };\nfunction reducer(state = initialState, action) {   // ... }"},{"title":"리팩토링 스터디(7장)","slug":"__tech__Refactoring__리팩토링++++스터디(7장)","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 16:18주제 또는 키워드간단한 내용레코드 캡슐화하기중첩된 레코드 캡슐화하기EduApplicantsGroup 캡슐화하기컬렉션 캡슐화하기클래스 추출하기news쪽 봐보기코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count: 0 };\nfunction reducer(state = initialState, action) {   // ... }"},{"title":"메서드 올리기","slug":"__tech__Refactoring__상속++++다루기__메서드++++올리기","shortSummary":"날짜와 시간날짜: 2023-11-07시간: 23:11주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[메서드 내리기]]간단한 내용메서드들의 코드가 똑같은때 최상위 클래스로 올림선행 리팩토링 후 중복된 부분을 체크해서 상위 클래스로 올린다.[[서브 클래스]]만 있는 경우 [[필드 올리기]]한다절차똑같이 동작하는 메서드인지 면밀히 살펴본다메서드 안에서 호출하는 다른 메서드와 참조하는 필드들을 슈퍼클래스에서도 호출하고"},{"title":"생성자 본문 올리기","slug":"__tech__Refactoring__상속++++다루기__생성자++++본문++++올리기","shortSummary":"날짜와 시간날짜: 2023-11-07시간: 23:25주제 또는 키워드간단한 내용코드 스니펫 (선택)"},{"title":"서브 클래스","slug":"__tech__Refactoring__상속++++다루기__서브++++클래스","shortSummary":"날짜와 시간날짜: 2023-11-07시간: 23:17주제 또는 키워드[[객체 지향]]\n[[subClass]]\n[[child class]]간단한 내용코드 스니펫 (선택)"},{"title":"필드 올리기","slug":"__tech__Refactoring__상속++++다루기__필드++++올리기","shortSummary":"날짜와 시간날짜: 2023-11-07시간: 23:21주제 또는 키워드[[Refactoring]]\n반대 리팩터링: [[필드 내리기]]간단한 내용사용 용도로와 의미가 비슷한 필드를 통하고 슈퍼클래스오 옮기자코드 스니펫 (선택)"},{"title":"언제 리팩토링해야 할까?","slug":"__tech__Refactoring__언제++++리팩토링해야++++할까?","shortSummary":"날짜와 시간날짜: 2023-10-17시간: 21:35주제 또는 키워드[[Refactoring]]\n[[Refactoring principle]]리팩터링을 해야하는 타이밍간단한 내용준비를 위한 리팩터링: 기능을 쉽게 추가하게 만들기기능 추가전 리팩터링을하면 좀 더 쉽게 할 수 있을것같을때버그를 잡을 때도 마찬가지이해를 위한 리팩터링: 코드를 이해하기 쉽게 만들기코드를 보면서 리팩토링 요소를 찾아보면서 이해하기, 그것을 반영하면"},{"title":"어서션 추가하기","slug":"__tech__Refactoring__조건부++++로직++++간소화__어서션++++추가하기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 17:39주제 또는 키워드[[Refactoring]]간단한 내용특정 조건이 참일때만 제대로 동작하는 코드 영역에 적용assertion은 항상 참이라고 가정하는 조건부 문자으로 어서션이 프로그램 기능의 정상 동적에 아무런 영향이 없어야한다.절차항상 참이라고 가정하는 조건이 보이면  그 조건을 명시하는 어서션 추가코드 스니펫 (선택)if (this.discountRate)\n\tbase"},{"title":"제어 플래그를 탈출문으로 바꾸기","slug":"__tech__Refactoring__조건부++++로직++++간소화__제어++++플래그를++++탈출문으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 17:44주제 또는 키워드[[Refactoring]]간단한 내용break문이나 continue문을 활용코드 스니펫 (선택)"},{"title":"조건부 로직을 다형성으로 바꾸기","slug":"__tech__Refactoring__조건부++++로직++++간소화__조건부++++로직을++++다형성으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 16:51주제 또는 키워드[[Refactoring]]간단한 내용switch 구문 사용시 각 case별로 클래스를 하나씩 만들면 중복을 없앨수 있음다형성은 객체 지향 프로그래밍의 핵심이지만 모든 조건부 로직을 바꾸는건 좋지 않음절차다형적 동작을 표현하는 클래스들이 아직 없다면 만들어준다. 이왕이면 적합한 인스턴스를 알아서 만들어 반환하는 팩터리"},{"title":"조건부 분해하기","slug":"__tech__Refactoring__조건부++++로직++++간소화__조건부++++분해하기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 15:56주제 또는 키워드[[Refactoring]]간단한 내용이 부분은 함수 추출의 일부분일수도 있지만 연습용으로 훌륭하기 때문에 뺀거라 한다.절차조건식과 그 조건식에 딸린 조건절 각각을 함수로 추출한다.코드 스니펫 (선택)if(!aDate.isBefore(plan.summerStart) && !aDate.isAfter(plan.summerEnd))\n\tcharge = quantity * plan.summerRate;\nelse\n\tcharge = quantity * plan.regularRate + plan.regularServiceCharge;=>if(summer())\n\tcharge = summerCharge();\nelse\n\tcharge"},{"title":"조건식 통합하기","slug":"__tech__Refactoring__조건부++++로직++++간소화__조건식++++통합하기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 16:06주제 또는 키워드[[Refactoring]]간단한 내용조건문이 다르더라도 수행하는 동작들이 같은 코드들을 합치는것이작업이 함수 추출하기까지 이어질 가능성이 높다완전히 독립적인 검사들이라고 판단될때만 할것절차해당 조건식들 모두 부수효과가 없는지 확인한다.조건문 두 개를 선택하여 두 조건문의 조건식들을 논리 연산자로 결합한다테스트조건이 하나만 남을 때까지 반복하나로"},{"title":"중첩 조건문을 보호 구문으로 바꾸기","slug":"__tech__Refactoring__조건부++++로직++++간소화__중첩++++조건문을++++보호++++구문으로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 16:41주제 또는 키워드[[Refactoring]]간단한 내용한쪽만 정상이라면 비정상 조건을 if에서 검사한 다음, 조건이 참이면(비정상이면) 함수에서 빠져나온다. 이런 형태의 검사를 보호 구문절차교체해야 할 조건 중 가장 바깥 것을 선택하여 보호 구문으로 바꾼다.테스트반복모든 보호 구문이 같은 결과를 반환한다면, 보호 구문을 [[조건식"},{"title":"특이 케이스 추가하기","slug":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","shortSummary":"날짜와 시간날짜: 2023-10-30시간: 17:10주제 또는 키워드[[Refactoring]]간단한 내용특정 케이스들이 반복되는 경우는 한곳에 모으자특이 케이스 객체에서 단순 데이터를 읽기만 한다면 반환할 값들을 리터럴 객체 형태로 준비널은 특이 케이스로 처리해야 할 때가 많다절차컨테이너에 특이 케이스인지 검사하는 속성을 추가하고, false 반환하게 한다.특이 케이스 객체를"},{"title":"질의 함수","slug":"__tech__Refactoring__질의++++함수","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 19:49주제 또는 키워드간단한 내용연산을 통해 값을 반환하는 함수코드 스니펫 (선택)"},{"title":"참조 투명","slug":"__tech__Refactoring__참조++++투명","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 20:39주제 또는 키워드간단한 내용referential transparency함수에 똑같은 값을 건네 호출하면 항상 톡같이 동작한다코드 스니펫 (선택)"},{"title":"기본형을 객체로 바꾸기","slug":"__tech__Refactoring__캡슐화__기본형을++++객체로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 16:49주제 또는 키워드[[Refactoring]]\n[[캡슐화]]간단한 내용처음에는 필요없을지라도 나중에 효과가 큼절차[[변수 캡슐화하기]]단순한 값 클래스를 만든다. 생성자는 기존 값을 인수로 받아서 저장하고, 이 값을 반환하는 게터를 추가정적 검사값 클래스의 인스턴스를 새로 만들어서 필드에 저장하도록 세터(1에서 만든)를 수정, 이미 있다면 필드의 타입을"},{"title":"레코드 캡슐화하기","slug":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 14:58주제 또는 키워드[[Record]]\n[[Refactoring]]\n[[캡슐화]]간단한 내용가변 데이터를 저장할때는 레코드 보다는 객체가 더 좋을수 있다.중첩된 리스트나 해시맵을 맏아서 JSON이나 XML같은 포멧으로 직렬화 할때 캡슐화가 나중에 포멧을 변경하고나 추적하기 어려운 데이터를 수정할때 좋다절차레코드를 담은 [[변수 캡슐화하기]]한다.레코드를 감싼 단순한 클래스로 해당 변수의"},{"title":"알고리즘 교체하기","slug":"__tech__Refactoring__캡슐화__알고리즘++++교체하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:50주제 또는 키워드[[Refactoring]]\n[[캡슐화]]간단한 내용절차교체할 코드를 하나에 모은다이 함수만을 이용해 동작을 검증한은 테스트를 마련한다.대체할 알고리즘을 준비한다정적 검사를 수행한다.기존 알고리즘과 새 알고리즘의 결과를 비교하는 테스트를 수행한다. 두 결과가 같다면 끝낸다코드 스니펫 (선택)// Redux 예시 \nconst initialState = { count:"},{"title":"위임 숨기기","slug":"__tech__Refactoring__캡슐화__위임++++숨기기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:37주제 또는 키워드[[Refactoring]]\n[[캡슐화]]\n반대 리팩터링: [[중개자 제거하기]]간단한 내용절차위임 객체의 각 메서드에 해당하는 위임 메서드를 서버에 생성한다.클라이언트가 위임 객체  대신 서버를 호출하다록 수정한다. 하나씩 바꿀때마다 테스트한다.모두 수정했다면, 서버로부터 위임객체를 얻는 접근자를 제거한다.테스트한다.코드 스니펫 (선택)manager = aPerson.department.mananger;manager = aPerson.manager;\n\nclass"},{"title":"임시 변수를 질의 함수로 바꾸기","slug":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:00주제 또는 키워드[[Refactoring]]\n[[캡슐화]]간단한 내용변수 대신 함수를 사용하면 다른 함수에서도 사용할 수 있어 코드 중복이 줄어든다.무조건 좋아지는건 아님예를 들면 변수에 값을 한번 대입한 뒤 더 복잡한 코드 덩어리에서 여러 차례 다시 대입하는 경우는 모두 질의 함수로 빼기절차변수가 사용되기"},{"title":"중개자 제거하기","slug":"__tech__Refactoring__캡슐화__중개자++++제거하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:44주제 또는 키워드[[Refactoring]]\n[[캡슐화]]\n반대 리팩터링: [[위임 숨기기]]간단한 내용위임을 숨기는게 항상 좋은건 아님, 단순히 전달만 하는 위임 메서드가 생긴다.이경우 중개자라고하며 위임 객체를 바로 호출하는게  나을수 있음절차위임 객체를 얻는 게터를 만든다.위임 메서드를 호출하는 클라이언트가 모두 이 게터를 거치도록 수정한다."},{"title":"컬렉션 캡슐화하기","slug":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 16:24주제 또는 키워드[[Refactoring]][[캡슐화]][[Collection]] [[data structure]]간단한 내용게터가 컬렉션 자체를 반환하게 된다면 클래스가 모르게 컬렉션의 원소가 바뀔수있음(참조..?)방지를 위해 add()와 remove()사용컬렉션 원본을 반환하지 않게 하는게 제일좋음읽기 전용으로 제공하는것도 방법위 방법중 하나만 사용해 코드베이스에서 일관성을 주자절자아직 컬렉션을 캡슐화하지 않았다면 [[변수 캡슐화하기]]부터하자컬렉션에"},{"title":"클래스 인라인하기","slug":"__tech__Refactoring__캡슐화__클래스++++인라인하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:30주제 또는 키워드[[Refactoring]]\n[[캡슐화]]\n반대 리팩터링: [[클래스 추출하기]]간단한 내용막상 [[클래스 추출하기]]하고 클래스에 남은 역할이 거의 없을때 한다.절차소스 클래스의 각 public 메서드에 대응하는 메서드들을 타깃 클래스에 생성한다. 이 메서드들은 단순히 작업을 소스 클래스로 위임해야한다.소스 클래스의 메서드를 사용하는 소스 코드를 모두"},{"title":"클래스 추출하기","slug":"__tech__Refactoring__캡슐화__클래스++++추출하기","shortSummary":"날짜와 시간날짜: 2023-10-22시간: 17:10주제 또는 키워드[[Refactoring]]\n[[캡슐화]]\n반대 리팩터링: [[클래스 인라인하기]]간단한 내용클래스는 반드시 명확하게 추상화하고 소수의 주어진 역할만 처리해야한다는 가이드라인을 떠올리자실무에서는 추가하고 보강하다보면 클래스가 비대해짐너무 큰 클래스의 경우 분리한다절차클래스의 역할을 분리할 방법을 정한다.분리될 역할을 담당할 클래스를 새로 만든다.원래 클래스의 생성자에서 새로운 클래스의"},{"title":"팩터리 함수","slug":"__tech__Refactoring__팩터리++++함수","shortSummary":"날짜와 시간날짜: 2023-11-03시간: 21:01주제 또는 키워드간단한 내용객체를 생성하여 반환하는 함수코드 스니펫 (선택)"},{"title":"SSL TLS","slug":"__tech__SSL++++TLS","shortSummary":"날짜와 시간날짜: 2024-04-25시간: 11:33주제 또는 키워드[[protocol]]\n[[프로토콜]]\n[[Security]]간단한 내용SSL(Secure Sockets Layer)TLS(Transport Layer Security)주요 기능암호화인증데이터 무결성현황현대는 대부분이 TLS을 사용중, TLS가 SSL 3.0을 기반으로 개발됨코드 스니펫 (선택)"},{"title":"CAPTCHA","slug":"__tech__Security__CAPTCHA","shortSummary":"날짜와 시간날짜: 2024-04-01시간: 17:02주제 또는 키워드[[CAPTCHA]]간단한 내용Completely Automated Public Turing test to cell Computer and Humans Apart어떤 사용자가 실제 사람인지 컴퓨터 프로그램인지 구별하기 위해 사용되는 방법ex) 다음 이미지중 아래 이미지와 같은 이미지를 고르시오코드 스니펫 (선택)"},{"title":"CSRF","slug":"__tech__Security__CSRF","shortSummary":"날짜와 시간날짜: 2024-04-01시간: 16:44주제 또는 키워드[[CSRF]]\n[[FE]]\n[[Security]]간단한 내용Cross-Site Request Forgery인증된 사용자가 웹 애플리케이션에 특정 요청을 보내도록 유도하는 공격, 공격 요청이 사용자 요청인 것처럼 속이는 방식데이터 값을 변경하는 요청을 대상으로 함, 제품 구입, 계정 설정등사용자가 해당 하이퍼링크를 클릭하면 요청이 자동으로 전송예시공격자가 특정"},{"title":"SQL Injection 방어","slug":"__tech__Security__SQL++++Injection++++방어","shortSummary":"날짜와 시간날짜: 2024-05-08시간: 16:15주제 또는 키워드[[SQL Injection]]간단한 내용ORM 사용사용자 입력 검증오류 메시지 관리[[WAF]] 사용쿼리 파라미터화코드 스니펫 (선택)"},{"title":"SQL Injection","slug":"__tech__Security__SQL++++Injection","shortSummary":"날짜와 시간날짜: 2024-04-01시간: 17:05주제 또는 키워드[[SQL 인젝션]]간단한 내용정의: 보안 취약점을 이용한 공격중에 하나로, 공격자가 애플리케이션 데이터베이스 쿼리에 악의적인 sql 코드를 삽입하는것무단으로 조회,수정,삭제가 가능하고 서버 제어도 가능함, 주로 웹 폼, URL 파라미터, 쿠키값 등에서 적절히 검증하지 않거나 [[escaping]]하지 않을때 발생[[SQL Injection"},{"title":"XSS","slug":"__tech__Security__XSS","shortSummary":"날짜와 시간날짜: 2024-04-01시간: 16:40주제 또는 키워드[[XSS]]\n[[FE]]\n[[Security]]간단한 내용Cross-site scripting웹 페이지에 악성 스크립트를 삽입할 수 있는 취약점예를 들어 여러 사용자가 보게 되는 게시판에 악성 스트립트가 담긴 글을 올리는 형태사용자로부터 입력 받은 값을 제대로 검사하지 않고 사용할 경우 발생대응 방법입력값 검증출력 값 검증보안"},{"title":"escaping","slug":"__tech__Security__escaping","shortSummary":""},{"title":"Separation of concerns","slug":"__tech__Separation++++of++++concerns","shortSummary":"날짜와 시간날짜: 2024-01-17시간: 22:15주제 또는 키워드SoC관심사 분리간단한 내용관심사란 컴퓨터 프로그램 코드에 영향을 미치는 정보의 집합복잡한 소프트웨어 시스템을 작고 관리하기 쉬운 부분으로 나누는 원칙모듈식, 즉 관심사의 분리는 정보를 잘 정의된 인터페이스가 있는 코드 부분 안에 캡슐화시킴으로써 달성시스템의 복잡성을 줄이고 유지보수를 용이하게함코드"},{"title":"SonarQube setting","slug":"__tech__SonarQube__SonarQube++++setting","shortSummary":"날짜와 시간날짜: 2023-10-10시간: 17:31주제 또는 키워드[[Code Quality]]sonarQube setting간단한 내용local에 soarQube docker 설치$ docker run -d --name sonarqube -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true -p 9000:9000 sonarqube:latestgenerate key\nhttps://docs.sonarsource.com/sonarqube/latest/try-out-sonarqube/?_gl=1y9noxq_gcl_awR0NMLjE2OTY5MjQ5ODUuQ2owS0NRanc3Sk9wQmhDZkFSSXNBTDNib2JlSXMzTmFtS0R6eTd2ZkNGWE11dVQ5cnZSeHZjc0ZJN3pTakFqd1kwSjB3WUo3Q29zWHVZUWFBbVR1RUFMd193Y0I._gcl_auMjAyNTA4NjExLjE2OTY5MjQ5ODU._gaODMxMzU1NDE1LjE2OTY5MjQ5ODU._ga_9JZ0GZ5TC6*MTY5NjkyNDk4NC4xLjEuMTY5NjkyNjEzNC4xOC4wLjA.install scanner\nhttps://docs.sonarsource.com/sonarqube/10.2/analyzing-source-code/scanners/sonarscanner/download zipset config(위에서 발급한 키값 넣어주기)add PATHvim ~/.bashrc\n\n//마지막줄에 추가\nexport PATH=$PATH:/path/to/your/install_directory/bin\n\nsource ~/.bashrc\n코드 스니펫 (선택)"},{"title":"SonarQube","slug":"__tech__SonarQube","shortSummary":""},{"title":"Scroll Triggered Animation","slug":"__tech__UI__Scroll++++Triggered++++Animation","shortSummary":""},{"title":"Text Reveal","slug":"__tech__UI__Text++++Reveal","shortSummary":""},{"title":"Web app manifests","slug":"__tech__Web++++app++++manifests","shortSummary":"날짜와 시간날짜: 2024-01-26시간: 10:30주제 또는 키워드웹에서 manifests간단한 내용웹 어플리케이션 정보를 정의한 JSON 텍스트 파일코드 스니펫 (선택)참고 링크https://w3c.github.io/manifest/"},{"title":"batch query","slug":"__tech__batch++++query","shortSummary":"\"배치 쿼리(Batch Query)\"는 데이터베이스 관리 시스템에서 한 번에 여러 SQL 쿼리를 실행하는 것을 말합니다. 이는 효율성을 증가시키고 네트워크 오버헤드를 줄이기 위해 사용됩니다. 일반적으로, 배치 쿼리는 다음과 같은 상황에서 유용합니다:대량 데이터 처리: 대용량의 데이터를 삽입, 업데이트, 삭제하거나, 다수의 테이블에서 데이터를 조회할"},{"title":"Dockerfile로 image 빌드","slug":"__tech__docker__Dockerfile로++++image++++빌드","shortSummary":""},{"title":"docker로 mysql container 생성 - 실습","slug":"__tech__docker__docker로++++mysql++++container++++생성++++-++++실습","shortSummary":"날짜: {date}목표docker로 mysql container 생성내용docker 설치https://doc.skill.or.kr/dockerMysql 이미지 pull아래의 명령어 터미널에서 실행특정 버전 원할경우 mysql:<version>docker pull mysql 3. container 실행\n```bash\ndocker run --name [컨테이너 이름] -e MYSQL_ROOT_PASSWORD=[루트 비밀번호] -p 3306:3306 -d mysql\ndocker container 상태 확인docker psmysql 접속docker exec -it [컨테이너 이름] mysql"},{"title":"docker로 mysql container 생성","slug":"__tech__docker__docker로++++mysql++++container++++생성","shortSummary":"날짜: {date}목표docker로 mysql container 생성내용[[strapi]]를 학습하기전에 내 로컬에 db가 있어야 테스트가 가능해서 먼저 docker로 mysql container를 생성 할려고한다.docker 설치이미 설치되어있으므로 생략하고 넘어간다Mysql 이미지 pull아래의 명령어 터미널에서 실행특정 버전 원할경우 mysql:<version>docker pull mysql 3. container 실행\n```bash\ndocker run --name [컨테이너 이름] -e"},{"title":"gateway","slug":"__tech__gateway","shortSummary":"날짜와 시간날짜: 2024-03-31시간: 21:58주제 또는 키워드[[게이트웨이]]\n[[gateway]]\n[[gateway]]간단한 내용서로 다른 네트워크 간에 데이터를 전송할 수 있게 해주는 네크워크 장치 또는 소프트웨어서로 다른 통신 프로토콜을 사용하더라도, 데이터를 다른 네트워크로 원활하게 이동할 수 있도록 변환해주는 역할코드 스니펫 (선택)"},{"title":"Table command","slug":"__tech__mysql__Table++++command","shortSummary":"CREATE TABLE [테이블 이름] (...);\nDROP TABLE [테이블 이름];\nALTER TABLE [테이블 이름] ...; #테이블 구조 변경\nSHOW TABLES; #현재 데이터베이스의 테이블 목록 표시\nDESC [테이블 이름]; #테이블 구조 설명(컬럼 정보 등)CREATE TABLECREATE TABLE tableName (\n\tcolumn1 dataType\n\tcolumn2\n\tcolumn3\n\tcolumn4\n\tcolumn5\n)dataTypehttps://dev.mysql.com/doc/refman/8.0/en/data-types.html"},{"title":"mysql 명령어","slug":"__tech__mysql__mysql++++명령어","shortSummary":"데이터베이스 관련 명령어CREATE DATABASE [데이터베이스 이름]; - 새 데이터베이스 생성DROP DATABASE [데이터베이스 이름]; - 데이터베이스 삭제USE [데이터베이스 이름]; - 사용할 데이터베이스 선택SHOW DATABASES; - 데이터베이스 목록 표시테이블 관련 명령어CREATE TABLE [테이블 이름] (...); - 새 테이블 생성DROP TABLE [테이블 이름];"},{"title":"데이터 베이스 관련 명령어","slug":"__tech__mysql__데이터++++베이스++++관련++++명령어","shortSummary":""},{"title":"명령어","slug":"__tech__npm__명령어","shortSummary":"특정 모듈 버전 확인npm list <패키지명>\n//글로벌\nnpm list -g <패키지명>"},{"title":"service-worker with angular 2","slug":"__tech__service-worker__service-worker++++with++++angular++++2","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 10:27주제 또는 키워드[[Angular]][[service-worker]]서비스 워커 통신간단한 내용SwUpdate 서비스서버에 새 버전을 확인 했을때 로컬에 설치하고 준비되었을 때, 설치 실패했을 때 알림을 보냄서버에 새 버전이 있는지 확인할 수 있음현재 탭에서 실행중인 애플리케이션을 최신 버전으로 갱신할 수 있음버전 업데이트|이벤트 타입|설명|\n|:--|:--|\n|[VersionDetectedEvent] |서비스"},{"title":"service-worker with angular","slug":"__tech__service-worker__service-worker++++with++++angular","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 10:27주제 또는 키워드[[Angular]]service worker with angular간단한 내용Angular가 제공하는 서비워커 지향 방향애플리케이션 캐싱은 네이티브 애플리케이션을 설치하는 것과 비슷, 개별 파일 단위부터 전체 한번에 캐싱할수 있음실행하면 모든 파일은 같은 버전으로 동작사용자가 새로고침하면 마지막에 캐싱된 애플리케이션 코드를 사용해서 화면에 다시"},{"title":"service-worker","slug":"__tech__service-worker__service-worker","shortSummary":"날짜와 시간날짜: 2024-01-24시간: 10:24주제 또는 키워드서비스 워커 개요간단한 내용서비스 워커란 웹 애플리케이션을 네이티브 앱처럼 로컬에 설치하여 안정성과 실행 성능을 향상시키는 역할을 하며 전통적인 웹 개발 모델의 확장하는 개념으로 사용[[PWA]]로 전환하는 과정중 한단계서비스 워커 = 애플리케이션의 캐시를 관리하기 위해 웹 브라우저에서"},{"title":"기본적인 최적화","slug":"__tech__기본적인++++최적화","shortSummary":"날짜와 시간날짜: 2024-04-30시간: 17:10주제 또는 키워드[[최적화]]간단한 내용1. 리소스 최적화최소화 및 압축: CSS, JavaScript, HTML 파일을 최소화하고 압축하여 전송하는 데이터 양을 줄입니다.이미지 최적화: 이미지 크기를 줄이고, 적절한 형식(GIF, PNG, JPEG, webp)을 선택하며, 필요시 이미지를 지연 로딩하도록 설정합니다.CDN 사용: 콘텐츠 전송 네트워크([[CDN]])를"},{"title":"데이터베이스 정규화","slug":"__tech__데이터베이스++++정규화","shortSummary":"날짜와 시간날짜: 2024-04-23시간: 14:46주제 또는 키워드[[Normalization]]\n[[Database]]\n[[정규화]]간단한 내용목적중복 제거: 중복 제거로 저장 공간 절약, 데이터 수정 시 발생할 수 있는 오류 가능성 줄이기데이터 무결성 보장: 데이터 간의 일관성을 유지하여, 데이터 베이스 내의 정보 신뢰성 증가쿼리 성능 향상정규화 과정제1정규형 (1NF)각 컬럼의 값이"},{"title":"마이크로 서비스","slug":"__tech__마이크로++++서비스","shortSummary":"날짜와 시간날짜: 2024-05-10시간: 11:37주제 또는 키워드[[micro service]]\n[[architecture]]간단한 내용독립적으로 배포 가능한 서비스로 나눠서 개발하는 아키텍쳐각각의 서비스가 하나의 작은 기능을 담당장점독립성탄력성확장성단점복잡성데이터 관리운영 난이도가 높음코드 스니펫 (선택)"},{"title":"부분 종속","slug":"__tech__부분++++종속","shortSummary":"날짜와 시간날짜: 2024-04-24시간: 11:50주제 또는 키워드[[Functional Dependency]]\n[[Partial Functional Dependency]]간단한 내용합성 키에서 발생하고 합성 키의 일부분만으로도 다른 속성을 결정할 수 있으때 부분 함수 종속ex학생 ID -> 등록 과목, ID로 등록 과목을 정할수 있음코드 스니펫 (선택)"},{"title":"이행적 종속","slug":"__tech__이행적++++종속","shortSummary":"날짜와 시간날짜: 2024-04-24시간: 11:52주제 또는 키워드[[Functional Dependency]]\n[[Transitive Dependency]]간단한 내용A -> B B-> C인 관계ex학생 Id => 학과 학과 => 학과장코드 스니펫 (선택)"},{"title":"전체 종속","slug":"__tech__전체++++종속","shortSummary":"날짜와 시간날짜: 2024-04-24시간: 11:47주제 또는 키워드[[Functional Dependency]]\n[[Full Functional Dependency]]간단한 내용A가 B에 전체 함수적으로 종속되어 있을때, A의 어떤 부분 집합도 B를 유일하게 결정하지 못함ex학생 id가 이름에 전체 종속이라면 학생 id의 어떤 부분도 이름을 결정할 수 없음id: 1 , 이름: 김영욱안되는 경우,"},{"title":"함수 종속","slug":"__tech__함수++++종속","shortSummary":"날짜와 시간날짜: 2024-04-24시간: 11:43주제 또는 키워드[[Functional Dependency]]간단한 내용정의a,b를 속성으로 하는 관계에서 A의 값이 B의 값에 영향을 미치는 관계를 말함a의 값이 b의 값을 유일하게 결정한다면 a는 b에 함수 종속적이다  || b는 a에 함수적으로 종속된다a -> b종류[[전체 종속]][[부분 종속]][[이행적 종속]]코드 스니펫"},{"title":"1.임시 메모 템플릿","slug":"__template__1.임시++++메모++++템플릿","shortSummary":"날짜와 시간날짜: {{date}}시간: {{time}}주제 또는 키워드간단한 내용코드 스니펫 (선택)"},{"title":"기획 문서 템플릿","slug":"__template__기획++++문서++++템플릿","shortSummary":"<h3>개요</h3>\n[[개요]]기능 요구 사항사용자 인터페이스 및 디자인기술 스택개발 일정 및 예산위험 관리 및 대응 계획기타"},{"title":"업무 일지 - {{date}}","slug":"__template__업무++++일지++++-++++{{date}}","shortSummary":"오늘의 목표[ ]  목표 1[ ]  목표 2[ ]  목표 3이슈 및 대응 전략이슈 ID:상세 설명:대응 전략:관련 PR/이슈 링크:코드 리뷰리뷰한 PR/이슈:리뷰 내용 요약:리뷰 결과: (승인/요청 변경)관련 링크:작업 내역작업 1:상세 설명:진행 상태:관련 커밋/PR 링크:작업 2:상세 설명:진행 상태:관련 커밋/PR"},{"title":"영구 메모 템플릿","slug":"__template__영구++++메모++++템플릿","shortSummary":"작성 날짜 (Date){{date}}주제 또는 키워드 (Topic or Keywords)코드 품질, 가독성, 유지보수, 리팩토링본문 (Content)코드의 가독성은 유지보수에 직접적인 영향을 미친다. 가독성이 높은 코드는 다른 개발자가 쉽게 이해하고 수정할 수 있으며, 이로 인해 프로젝트의 전체적인 품질과 생산성이 향상된다. 리팩토링은 코드의 가독성을 높이는 데"},{"title":"일지 템플릿","slug":"__template__일지++++템플릿","shortSummary":"날짜: {date}목표내용"},{"title":"장애 대응 로그","slug":"__template__장애++++대응++++로그","shortSummary":"기본 정보장애 발생 일시: {{date}} {{time}}장애 해결 일시:대응자:장애 등급: (긴급/높음/중간/낮음)장애 요약문제점 요약:영향을 받는 서비스/시스템:영향을 받는 사용자 수 / 비즈니스 영향:장애 원인초기 판단:최종 확인 원인:대응 과정시간:내용:담당자:복구 및 검증복구 방법:복구 검증 과정:후속 조치[ ]  후속 조치 항목 1[ ]  후속"},{"title":"참고 문헌 메모 템플릿","slug":"__template__참고++++문헌++++메모++++템플릿","shortSummary":"tags: []\ncreated: {{date}} {{time}}\nmodified: {{date}} {{time}}출처저자: 저자 이름출판사: 출판사 이름출판일: 출판일ISBN: ISBN 번호주요 내용주요 내용 요약인용구인용구내 생각자신의 생각 및 해석참고 노트참고 자료"},{"title":"2023-09-12","slug":"__toonsqaure__Work++++Log__2023-09-12","shortSummary":"오늘의 목표[ ]  [에디터] 선생님 프로 신청 - 어드민 수정 사항[ ]  목표 2[ ]  목표 3이슈 및 대응 전략이슈 ID: 6784상세 설명:[x] default 기간을을 업데이트 날짜로 정렬한다.[x] default 기간을 한달로 늘린다[x] 업데이트 시각 기준으로 정렬시 생성일로"},{"title":"2023-09-14","slug":"__toonsqaure__Work++++Log__2023-09-14","shortSummary":"오늘의 목표[ ]  오퍼 배포[ ] [beta 에디터] 모바일 B2G - 교육 요금제 문의 모바일 UI 수정 요청[ ] 페이팔 베타 테스트 및 버그 수정이슈 및 대응 전략이슈 ID: nan상세 설명:오퍼레이션 환경에 배포대응 전략:migration을 위해 server는 pr을 통해서 squash"},{"title":"2023-09-19","slug":"__toonsqaure__Work++++Log__2023-09-19","shortSummary":"오늘의 목표[ ]  b2g ui 수정작업 내역작업 1: b2g ui 수정상세 설명: b2g 모바일 ui 수정, 마진 깨짐 수정진행 상태:[x] 소속 선택 드롭다운 바 수정[x] 요금제 정보 모바일 글자 줄바뀜 수정[x] 체크 박스 ios => md[ ] 완료 페이지"},{"title":"2023-09-20","slug":"__toonsqaure__Work++++Log__2023-09-20","shortSummary":"오늘의 목표[ ]  b2g ui 수정[ ]  해외 구독자 구독 해지 기능 추가[ ]  해외 유저 결제 내역 확인 모달이슈 및 대응 전략이슈 ID:상세 설명:대응 전략:관련 PR/이슈 링크:코드 리뷰리뷰한 PR/이슈:리뷰 내용 요약:리뷰 결과: (승인/요청 변경)관련 링크:작업 내역작업"},{"title":"2023-09-25","slug":"__toonsqaure__Work++++Log__2023-09-25","shortSummary":"오늘의 목표[ ] faq 날라간 내용 확인하기[ ] 셀프 리뷰 적기[ ] pr 리뷰 적용이슈 및 대응 전략이슈 ID:상세 설명:대응 전략:관련 PR/이슈 링크:코드 리뷰리뷰한 PR/이슈:리뷰 내용 요약:리뷰 결과: (승인/요청 변경)관련 링크:작업 내역작업 1:상세 설명:진행 상태:관련 커밋/PR 링크:작업 2:상세 설명:진행 상태:관련"},{"title":"global db test","slug":"__toonsqaure__global++++db++++test","shortSummary":"로컬 테스트global로 테스트할 local db 세팅아무 덤프파일을  /var/db_dump/global 에 복사해 넣기local-mysql-global docker 키기남아 있을테이블만 남기도 drop1\tall_body\n2\tall_body_tags_tag\n3\tall_hair\n4\tballoon\n5\tballoon_bubble\n6\tcharacter\n7\tcharacter_category\n8\tcharacter_feature_limit\n9\tcharacter_resource\n10 character_resource_arm_character_resource\tNo data, used in 투닝\n11\tcharacter_resource_hands_character_resource\n12\tcharacter_resource_hands_tag\tNo data, used in 투닝\n13\tcharacter_resource_tags_tag\n14\tcharacter_set\n15\tcharacter_tags_tag\n16\tdefault_character\n17\tdefault_word\n18\teach_step_tf\n19\tetc_upload\n20\tetc_upload_category\n21\tetc_upload_category_tags_tag\n22\tetc_upload_each_step_tf\n23\tetc_upload_tags_tag\n24\tetc_upload_type\n25\tetc_upload_version\n26\tfaq\n27\tfaq_category\n28\tfaq_category_faqs_faq\n29\tfaq_category_translations\n30\tfaq_country\n31\tfaq_description\n32\tfont\n33\tfont_format\n34\tintent\n35\tmagic_category\n36\tmagic_excel\n37\tmagic_keyword\n38\tmagic_style\n39\tmeme\n40\tmeme_log\n41\tmeme_property\n42\tmeme_search_word\n43\tmeme_update\n44\tnews\n45\tnew_description\n46\tsku\tRelation with purchase needs disconnection\n47\tsku_category\n48\tsku_category_name\n49\tsku_sub_category\n50\tsku_sub_category_name\n51\ttag\n52\ttag_translation_error\n53\ttag_translations\n54\ttemplate\tRelation with canvas needs disconnection\n55\ttemplate_category\n56\ttemplate_tags_tag\n57\ttemplate_template_category_template_category\n58\ttemplate_to_category\n59\ttext_template\tRelation with canvas needs disconnection\n60\ttext_template_category\n61\ttext_template_tags_tag\n62\ttext_template_text_template_category_text_template_category"},{"title":"네이버 이상웅 개발자 세미나","slug":"__네이버++++이상웅++++개발자++++세미나","shortSummary":"프리토크웹시작을 14년전에 시작\n너의 커리어에서 어떤 기술 스펙을 가지고 있냐기술 스펙이 명확하지 않다연구소 특성상 데모정도 수준으로 하기떄문에 다양한 기술을 습득했지만 깊지않았다기본적인 생각들이 다 기술적으로 동일하다...돔... fe에서는 키워드깊게 들어가지 못햇다...내가 현재 어떤 기술 스펙으로 정의할수있냐? ... 스스로 해보면서 앞으로 나아가야할 커리어를 고민해볼수있다깊이있는"},{"title":"노트링크","slug":"__노트링크","shortSummary":""},{"title":"백링크","slug":"__백링크","shortSummary":""},{"title":"실무에서 바로 쓰는 Front-end Clean Code","slug":"__실무에서++++바로++++쓰는++++Front-end++++Clean++++Code","shortSummary":"[[Code Quality]]실무에서 클린 코드의 의의안일한 코드 추가의 함정로직을 빠르게 찾을 수 있는 코드액션 아이템"},{"title":"자바스트립트","slug":"__자바스트립트","shortSummary":""},{"title":"제텔카스텐","slug":"__제텔카스텐","shortSummary":"원칙하나의 노트, 하나의 아이디어노트간 연결을 많이 만들기내 언어로 작성하기추측/계획보다는 사실/주장을 적기[[1.임시 메모 템플릿]][[영구 메모 템플릿]]"}],"edges":[{"source":"__7++++simple++++habits++++of++++the++++top++++1%++++of++++engineers","target":"/"},{"source":"__index","target":"/"},{"source":"__project__나만의++++블로그__나만의++++블로그++++개요","target":"/"},{"source":"__project__나만의++++블로그__나만의++++블로그++++기획++++문서","target":"__project__나만의++++블로그__나만의++++블로그++++기능++++요구사항"},{"source":"__tech__API","target":"__tech__API"},{"source":"__tech__API","target":"__tech__gateway"},{"source":"__tech__Algorithm__In++++place","target":"/"},{"source":"__tech__Algorithm__깊이++++우선++++탐색","target":"/"},{"source":"__tech__Algorithm__깊이++++우선++++탐색","target":"__tech__Algorithm__탐색"},{"source":"__tech__Algorithm__깊이++++우선++++탐색","target":"/"},{"source":"__tech__Algorithm__너비++++우선++++탐색","target":"/"},{"source":"__tech__Algorithm__너비++++우선++++탐색","target":"__tech__Algorithm__탐색"},{"source":"__tech__Algorithm__너비++++우선++++탐색","target":"/"},{"source":"__tech__Algorithm__등차수열","target":"/"},{"source":"__tech__Algorithm__등차수열","target":"__tech__Algorithm__점화식"},{"source":"__tech__Algorithm__보이어++++무어++++알고리즘","target":"/"},{"source":"__tech__Algorithm__선형++++탐색","target":"/"},{"source":"__tech__Algorithm__선형++++탐색","target":"__tech__Algorithm__탐색"},{"source":"__tech__Algorithm__선형++++탐색","target":"/"},{"source":"__tech__Algorithm__순열","target":"/"},{"source":"__tech__Algorithm__순열","target":"/"},{"source":"__tech__Algorithm__이진++++탐색","target":"/"},{"source":"__tech__Algorithm__이진++++탐색","target":"__tech__Algorithm__탐색"},{"source":"__tech__Algorithm__이진++++탐색","target":"/"},{"source":"__tech__Algorithm__점화식","target":"/"},{"source":"__tech__Algorithm__점화식","target":"/"},{"source":"__tech__Algorithm__점화식","target":"/"},{"source":"__tech__Algorithm__조합","target":"/"},{"source":"__tech__Algorithm__조합","target":"/"},{"source":"__tech__Algorithm__탐색","target":"/"},{"source":"__tech__Algorithm__탐색","target":"/"},{"source":"__tech__Algorithm__해시++++테이블","target":"/"},{"source":"__tech__Algorithm__해시++++테이블","target":"__tech__Algorithm__탐색"},{"source":"__tech__Algorithm__해시++++테이블","target":"/"},{"source":"__tech__Code++++Quality","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Code++++Quality","target":"__tech__SonarQube"},{"source":"__tech__Collection","target":"__tech__Collection"},{"source":"__tech__Collection","target":"/"},{"source":"__tech__Encapsulation","target":"/"},{"source":"__tech__Encapsulation","target":"__tech__Separation++++of++++concerns"},{"source":"__tech__JavaScript__Optional++++chaining","target":"/"},{"source":"__tech__JavaScript__Optional++++chaining","target":"__tech__JavaScript__Optional++++chaining"},{"source":"__tech__JavaScript__Optional++++chaining","target":"/"},{"source":"__tech__JavaScript__Optional++++chaining","target":"__tech__JavaScript__nullish"},{"source":"__tech__Javascript++++Event++++Loop","target":"/"},{"source":"__tech__Javascript++++Event++++Loop","target":"/"},{"source":"__tech__Javascript++++Event++++Loop","target":"__tech__Data++++Structure__Stack"},{"source":"__tech__Javascript++++Event++++Loop","target":"/"},{"source":"__tech__Javascript++++Event++++Loop","target":"__tech__Data++++Structure__Queue"},{"source":"__tech__Javascript++++Event++++Loop","target":"__tech__Data++++Structure__Queue"},{"source":"__tech__REST++++api","target":"__tech__REST"},{"source":"__tech__REST","target":"__tech__REST"},{"source":"__tech__RESTful++++API","target":"__tech__REST"},{"source":"__tech__RESTful++++API","target":"__tech__RESTful++++API"},{"source":"__tech__RESTful++++API","target":"__tech__REST"},{"source":"__tech__React__Effect__Effect","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Components","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Configuring++++Components++++With++++\"Props\"","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Configuring++++Components++++With++++\"Props\"","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Configuring++++Components++++With++++\"Props\"","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Configuring++++Components++++With++++\"Props\"","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__JSX","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__JSX","target":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__JSX"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__JSX","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Loading++++Img++++in++++JSX","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Loading++++Img++++in++++JSX","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__Outputting++++Dynamic++++Content++++in++++JSX","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__State++++관리++++ambersand++++Hooks++++사용법","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__State++++관리++++ambersand++++Hooks++++사용법","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__State++++관리++++ambersand++++Hooks++++사용법","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__UI를++++업데이트하지++++않는++++법","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__UI를++++업데이트하지++++않는++++법","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__children++++Prop","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__event++++handle","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__더++++다양한++++Prop(속성)++++문법","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__더++++다양한++++Prop(속성)++++문법","target":"/"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__컨포넌트에++++스타일++++불러오기","target":"__tech__React__React"},{"source":"__tech__React__React++++강의__React++++핵심++++-++++컨포넌트,jsx,++++속성,++++상태++++등__함수를++++Prop의++++값으로++++전달하기","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Extracting++++State++++Logic++++into++++a++++Reducer","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Importing++++And++++Exporting++++Components","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Importing++++And++++Exporting++++Components","target":"__tech__React__React++++공식++++문서++++공부__Writing++++Markup++++with++++JSX"},{"source":"__tech__React__React++++공식++++문서++++공부__JavaScript++++in++++JSX++++with++++Curly++++Braces","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__JavaScript++++in++++JSX++++with++++Curly++++Braces","target":"__tech__React__React++++공식++++문서++++공부__Passing++++Props++++to++++a++++Components"},{"source":"__tech__React__React++++공식++++문서++++공부__Passing++++Props++++to++++a++++Components","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Preserving++++and++++Resetting++++State","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Queueing++++a++++Series++++of++++State++++Updates","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__React++++LifeCycle","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__React++++LifeCycle","target":"/"},{"source":"__tech__React__React++++공식++++문서++++공부__React++++개요","target":"/"},{"source":"__tech__React__React++++공식++++문서++++공부__React++++개요","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Reacting++++to++++Input++++with++++State","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__React의++++이해","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Render++++and++++Commit","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__State++++as++++a++++Snapshot","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__State-A++++component's++++Meomory","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__State-A++++component's++++Meomory","target":"/"},{"source":"__tech__React__React++++공식++++문서++++공부__Updating++++Objects++++in++++State","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Writing++++Markup++++with++++JSX","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Writing++++Markup++++with++++JSX","target":"__tech__React__React++++공식++++문서++++공부__JavaScript++++in++++JSX++++with++++Curly++++Braces"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"/"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React++++공식++++문서++++공부__JavaScript++++in++++JSX++++with++++Curly++++Braces"},{"source":"__tech__React__React++++공식++++문서++++공부__Your++++First++++Component","target":"__tech__React__React++++공식++++문서++++공부__Importing++++And++++Exporting++++Components"},{"source":"__tech__React__React","target":"__자바스트립트"},{"source":"__tech__React__React","target":"/"},{"source":"__tech__Refactoring__API++++리팩터링__객체++++통째로++++넘기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__객체++++통째로++++넘기기","target":"__tech__Refactoring__레코드"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__질의++++함수"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__참조++++투명"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__명령을++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__명령을++++함수로++++바꾸기","target":"__tech__Refactoring__API++++리팩터링__함수를++++명령으로++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__생성자를++++팩터리++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__세터++++제거하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__수정된++++값++++반환하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__예외를++++사전확인으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__오류++++코드를++++예외로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","target":"__tech__Refactoring__API++++리팩터링__매개변수를++++질의++++함수로++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수를++++매개변수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수와++++변경++++함수++++분리하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__질의++++함수와++++변경++++함수++++분리하기","target":"__tech__Refactoring__겉보기++++부수효과"},{"source":"__tech__Refactoring__API++++리팩터링__플래그++++인수++++제거하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__함수++++매개변수화하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__함수++++매개변수화하기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__함수를++++명령으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__API++++리팩터링__함수를++++명령으로++++바꾸기","target":"__tech__Refactoring__API++++리팩터링__명령을++++함수로++++바꾸기"},{"source":"__tech__Refactoring__API++++리팩터링__함수를++++명령으로++++바꾸기","target":"__tech__Refactoring__기능++++이동__함수++++옮기기"},{"source":"__tech__Refactoring__Reason++++of++++Refactoring","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Reason++++of++++Refactoring","target":"__tech__Refactoring__Refactoring++++principle"},{"source":"__tech__Refactoring__Refactoring++++Basic__단계++++쪼개기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__단계++++쪼개기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__매개변수++++객체++++만들기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__매개변수++++객체++++만들기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++이름++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++이름++++바꾸기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++추출하기","target":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기","target":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기","target":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++변환++++함수로++++묶기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++변환++++함수로++++묶기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++변환++++함수로++++묶기","target":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__tech__Refactoring__Refactoring++++Basic__매개변수++++객체++++만들기"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__tech__Refactoring__기능++++이동__함수++++옮기기"},{"source":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","target":"__Refactoring++++Basic"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","target":"__tech__Refactoring__데이터++++조직화__변수++++쪼개기"},{"source":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기","target":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기"},{"source":"__tech__Refactoring__Refactoring++++principle","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__겉보기++++부수효과","target":"__tech__Refactoring__겉보기++++부수효과"},{"source":"__tech__Refactoring__겉보기++++부수효과","target":"/"},{"source":"__tech__Refactoring__기능++++이동__문장++++슬라이드하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__문장을++++함수로++++옮기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__문장을++++함수로++++옮기기","target":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기"},{"source":"__tech__Refactoring__기능++++이동__문장을++++함수로++++옮기기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","target":"__tech__Refactoring__기능++++이동__문장을++++함수로++++옮기기"},{"source":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기"},{"source":"__tech__Refactoring__기능++++이동__문장을++++호출한++++곳으로++++옮기기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__기능++++이동__반복문++++쪼개기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__반복문++++쪼개기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__기능++++이동__반복문++++쪼개기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__기능++++이동__반복문을++++파이프라인으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__인라인++++코드를++++함수++++호출로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__인라인++++코드를++++함수++++호출로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__기능++++이동__필드++++옮기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__함수++++옮기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__기능++++이동__함수++++옮기기","target":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기"},{"source":"__tech__Refactoring__기능++++이동__함수++++옮기기","target":"__tech__Refactoring__캡슐화__클래스++++추출하기"},{"source":"__tech__Refactoring__데이터++++조직화__값을++++참조로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__데이터++++조직화__값을++++참조로++++바꾸기","target":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기"},{"source":"__tech__Refactoring__데이터++++조직화__매직++++리터럴++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__데이터++++조직화__변수++++쪼개기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기","target":"__tech__Refactoring__데이터++++조직화__값을++++참조로++++바꾸기"},{"source":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기","target":"__tech__Refactoring__API++++리팩터링__세터++++제거하기"},{"source":"__tech__Refactoring__데이터++++조직화__파생++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__데이터++++조직화__파생++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__데이터++++조직화__변수++++쪼개기"},{"source":"__tech__Refactoring__데이터++++조직화__파생++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__조건부++++로직++++간소화__어서션++++추가하기"},{"source":"__tech__Refactoring__데이터++++조직화__파생++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__기능++++이동__죽은++++코드++++제거하기"},{"source":"__tech__Refactoring__데이터++++조직화__필드++++이름++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__두개의++++모자","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__두개의++++모자","target":"__tech__Refactoring__Refactoring++++principle"},{"source":"__tech__Refactoring__레코드","target":"__tech__Record"},{"source":"__tech__Refactoring__상속++++다루기__메서드++++올리기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__상속++++다루기__메서드++++올리기","target":"/"},{"source":"__tech__Refactoring__상속++++다루기__메서드++++올리기","target":"__tech__Refactoring__상속++++다루기__서브++++클래스"},{"source":"__tech__Refactoring__상속++++다루기__메서드++++올리기","target":"__tech__Refactoring__상속++++다루기__필드++++올리기"},{"source":"__tech__Refactoring__상속++++다루기__메서드++++올리기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__상속++++다루기__서브++++클래스","target":"/"},{"source":"__tech__Refactoring__상속++++다루기__서브++++클래스","target":"/"},{"source":"__tech__Refactoring__상속++++다루기__서브++++클래스","target":"/"},{"source":"__tech__Refactoring__상속++++다루기__필드++++올리기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__상속++++다루기__필드++++올리기","target":"/"},{"source":"__tech__Refactoring__언제++++리팩토링해야++++할까?","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__언제++++리팩토링해야++++할까?","target":"__tech__Refactoring__Refactoring++++principle"},{"source":"__tech__Refactoring__언제++++리팩토링해야++++할까?","target":"/"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__어서션++++추가하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__제어++++플래그를++++탈출문으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__조건부++++로직을++++다형성으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__조건부++++분해하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__조건식++++통합하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__중첩++++조건문을++++보호++++구문으로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__중첩++++조건문을++++보호++++구문으로++++바꾸기","target":"__tech__Refactoring__조건부++++로직++++간소화__조건식++++통합하기"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++추출하기"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","target":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++클래스로++++묶기"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","target":"__tech__Refactoring__Refactoring++++Basic__여러++++함수를++++변환++++함수로++++묶기"},{"source":"__tech__Refactoring__조건부++++로직++++간소화__특이++++케이스++++추가하기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++인라인하기"},{"source":"__tech__Refactoring__캡슐화__기본형을++++객체로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__기본형을++++객체로++++바꾸기","target":"/"},{"source":"__tech__Refactoring__캡슐화__기본형을++++객체로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기"},{"source":"__tech__Refactoring__캡슐화__기본형을++++객체로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__함수++++선언++++바꾸기"},{"source":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","target":"__tech__Record"},{"source":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기"},{"source":"__tech__Refactoring__캡슐화__레코드++++캡슐화하기","target":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기"},{"source":"__tech__Refactoring__캡슐화__알고리즘++++교체하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__알고리즘++++교체하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__위임++++숨기기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__위임++++숨기기","target":"/"},{"source":"__tech__Refactoring__캡슐화__위임++++숨기기","target":"__tech__Refactoring__캡슐화__중개자++++제거하기"},{"source":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기","target":"/"},{"source":"__tech__Refactoring__캡슐화__임시++++변수를++++질의++++함수로++++바꾸기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++인라인하기"},{"source":"__tech__Refactoring__캡슐화__중개자++++제거하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__중개자++++제거하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__중개자++++제거하기","target":"__tech__Refactoring__캡슐화__위임++++숨기기"},{"source":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","target":"__tech__Collection"},{"source":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__컬렉션++++캡슐화하기","target":"__tech__Refactoring__Refactoring++++Basic__변수++++캡슐화하기"},{"source":"__tech__Refactoring__캡슐화__클래스++++인라인하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__클래스++++인라인하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__클래스++++인라인하기","target":"__tech__Refactoring__캡슐화__클래스++++추출하기"},{"source":"__tech__Refactoring__캡슐화__클래스++++인라인하기","target":"__tech__Refactoring__캡슐화__클래스++++추출하기"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"__tech__Refactoring__Refactoring"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"__tech__Refactoring__캡슐화__클래스++++인라인하기"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"/"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"__tech__Refactoring__기능++++이동__함수++++옮기기"},{"source":"__tech__Refactoring__캡슐화__클래스++++추출하기","target":"__tech__Refactoring__데이터++++조직화__참조를++++값으로++++바꾸기"},{"source":"__tech__SSL++++TLS","target":"/"},{"source":"__tech__SSL++++TLS","target":"/"},{"source":"__tech__SSL++++TLS","target":"/"},{"source":"__tech__Security__CAPTCHA","target":"__tech__Security__CAPTCHA"},{"source":"__tech__Security__CSRF","target":"__tech__Security__CSRF"},{"source":"__tech__Security__CSRF","target":"/"},{"source":"__tech__Security__CSRF","target":"/"},{"source":"__tech__Security__CSRF","target":"__tech__Security__CAPTCHA"},{"source":"__tech__Security__SQL++++Injection++++방어","target":"__tech__Security__SQL++++Injection"},{"source":"__tech__Security__SQL++++Injection++++방어","target":"/"},{"source":"__tech__Security__SQL++++Injection","target":"/"},{"source":"__tech__Security__SQL++++Injection","target":"__tech__Security__escaping"},{"source":"__tech__Security__SQL++++Injection","target":"__tech__Security__SQL++++Injection++++방어"},{"source":"__tech__Security__XSS","target":"__tech__Security__XSS"},{"source":"__tech__Security__XSS","target":"/"},{"source":"__tech__Security__XSS","target":"/"},{"source":"__tech__SonarQube__SonarQube++++setting","target":"__tech__Code++++Quality"},{"source":"__tech__docker__docker로++++mysql++++container++++생성","target":"/"},{"source":"__tech__gateway","target":"/"},{"source":"__tech__gateway","target":"__tech__gateway"},{"source":"__tech__gateway","target":"__tech__gateway"},{"source":"__tech__service-worker__service-worker++++with++++angular++++2","target":"/"},{"source":"__tech__service-worker__service-worker++++with++++angular++++2","target":"__tech__service-worker__service-worker"},{"source":"__tech__service-worker__service-worker++++with++++angular","target":"/"},{"source":"__tech__service-worker__service-worker++++with++++angular","target":"__tech__Web++++app++++manifests"},{"source":"__tech__service-worker__service-worker++++with++++angular","target":"__tech__Web++++app++++manifests"},{"source":"__tech__service-worker__service-worker","target":"__tech__PWA"},{"source":"__tech__기본적인++++최적화","target":"/"},{"source":"__tech__기본적인++++최적화","target":"/"},{"source":"__tech__기본적인++++최적화","target":"/"},{"source":"__tech__기본적인++++최적화","target":"/"},{"source":"__tech__기본적인++++최적화","target":"/"},{"source":"__tech__데이터베이스++++정규화","target":"/"},{"source":"__tech__데이터베이스++++정규화","target":"/"},{"source":"__tech__데이터베이스++++정규화","target":"/"},{"source":"__tech__데이터베이스++++정규화","target":"__tech__부분++++종속"},{"source":"__tech__데이터베이스++++정규화","target":"__tech__이행적++++종속"},{"source":"__tech__마이크로++++서비스","target":"/"},{"source":"__tech__마이크로++++서비스","target":"/"},{"source":"__tech__부분++++종속","target":"/"},{"source":"__tech__부분++++종속","target":"/"},{"source":"__tech__이행적++++종속","target":"/"},{"source":"__tech__이행적++++종속","target":"/"},{"source":"__tech__전체++++종속","target":"/"},{"source":"__tech__전체++++종속","target":"/"},{"source":"__tech__함수++++종속","target":"/"},{"source":"__tech__함수++++종속","target":"__tech__전체++++종속"},{"source":"__tech__함수++++종속","target":"__tech__부분++++종속"},{"source":"__tech__함수++++종속","target":"__tech__이행적++++종속"},{"source":"__실무에서++++바로++++쓰는++++Front-end++++Clean++++Code","target":"__tech__Code++++Quality"},{"source":"__제텔카스텐","target":"__template__1.임시++++메모++++템플릿"},{"source":"__제텔카스텐","target":"__template__영구++++메모++++템플릿"}]}